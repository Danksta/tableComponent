{"ast":null,"code":"var _jsxFileName = \"/home/user/Downloads/BasicReact/basicreact/src/App.js\";\n\n/*\nimport React, { Component } from 'react';\nimport './App.css';\nimport HelloWorld from './components/HelloWorld';\n  import Select from './components/Select';\n\nclass App extends Component{\n \n  state = {\n\n    selected_value:\"text\",\n    select_id:\"\",\n    some_value:[\"date\",\"datetime\",\"email\"]\n\n    \n\n  }\n  \n  optionChangeHandler =(e)=>{\n    console.log(\"this is e\", e)\n    this.setState({\n\n      selected_value: e \n      \n\n    }\n  )\n  }\n\n  CallInterval =() =>{\n    console.log(\"intervall call\")\n  }\n\n\n render(){\n   console.log(\"final state\",this.state)\n  return (\n\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {  /!* <img src={logo} className=\"App-logo\" alt=\"logo\" />       *!/}\n         \n          <HelloWorld />\n\n          <Select select_id=\"type_of_input\" selected_value={this.state.selected_value} some_value={this.state.some_value} \n          changed={this.optionChangeHandler}\n\n          />\n           \n      </header>\n    </div>\n  );\n}\n}\nexport default App;\n*/\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useExpanded, useFilters, useGroupBy, usePagination, useSortBy, useTable } from 'react-table';\nimport Avatar, { ConfigProvider } from \"react-avatar\";\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    \n\n\n    tr {\n    \n      height: 70px;\n  width: 1318px;\n      color: #4A4A4A;\n      font-family: Roboto;\n      font-size: 14px;\n      font-weight: 500;\n      line-height: 19px;\n      :first-child {\n     td{border-top: 2px solid rgba(143,143,143,0.2);}\n      \n      }\n      :last-child {\n      \n        td {\n        color: green;\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      \n      :first-child{ \n      font-weight: bold;      \n      border-left: 2px solid rgba(143,143,143,0.2);\n      };\n      :second-child{color: green};\n      :last-child {\n      border-right: 2px solid rgba(143,143,143,0.2);     \n      }\n    }\n  }\n`; // Use the useTable hook to create your table configuration\n\nfunction Table({\n  columns,\n  data\n}) {\n  // Use the state and functions returned from useTable to build your UI\n  const instance = useTable({\n    columns,\n    data,\n    useGroupBy,\n    useFilters,\n    useSortBy,\n    useExpanded,\n    usePagination\n  }); // Render the UI for your table\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"table\", Object.assign({}, getTableProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, headerGroups.map(headerGroup => React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), headerGroup.headers.map(column => React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), column.render('Header')))))), React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), rows.map((row, i) => {\n    prepareRow(row);\n    return React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), row.cells.map(cell => {\n      return React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), cell.render('Cell'));\n    }));\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => previousPage(),\n    disabled: !canPreviousPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Previous Page\"), React.createElement(\"button\", {\n    onClick: () => nextPage(),\n    disabled: !canNextPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Next Page\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Page\", ' ', React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, pageIndex + 1, \" of \", pageOptions.length)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Go to page:\"), React.createElement(\"input\", {\n    type: \"number\",\n    defaultValue: pageIndex + 1 || 1,\n    onChange: e => {\n      const page = e.target.value ? Number(e.target.value) - 1 : 0;\n      gotoPage(page);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), React.createElement(\"select\", {\n    value: pageSize,\n    onChange: e => {\n      setPageSize(Number(e.target.value));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, pageSizeOptions.map(pageSize => React.createElement(\"option\", {\n    key: pageSize,\n    value: pageSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Show \", pageSize)))));\n}\n\nlet mainContentStyle = {\n  height: \"16px\",\n  width: \"144px\",\n  color: \"red\",\n  fontFamily: \"Roboto\",\n  fontSize: \"14px\",\n  lineHeight: \"19px\"\n};\nlet colors = ['black', 'green', 'blue'];\n\nfunction App() {\n  const columns = [{\n    Header: '',\n    accessor: 'profileImage',\n    Cell: ({\n      row\n    }) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"class-for-name\",\n        style: {\n          height: \"16px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(ConfigProvider, {\n        colors: colors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        name: row.original.candidateName,\n        size: \"30\",\n        round: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    /*Header: ' ',\n    columns: [\n        {*/\n    Header: 'Candidate',\n    accessor: 'candidateName',\n    Cell: ({\n      row\n    }) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"class-for-name\",\n        style: {\n          height: \"16px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, row.original.candidateName), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"class-for-description\",\n        style: {\n          color: \"#909090\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, row.original.candidateEmail));\n    }\n  }, {\n    Header: 'Candidate ID',\n    id: \"candidateId\",\n    accessor: \"candidateId\",\n    ignoreRowClick: true,\n    Cell: ({\n      row\n    }) => React.createElement(\"a\", {\n      href: row.original.candidateId,\n      onClick: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, row.original.candidateId)\n  }, {\n    Header: 'Organization',\n    accessor: 'organization',\n    Cell: ({\n      row\n    }) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onMouseOver: () => {\n          console.log(\"henlo\");\n        },\n        className: \"class-for-name\",\n        style: {\n          height: \"16px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, row.original.organization), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"class-for-description\",\n        style: {\n          color: \"#909090\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, row.original.organization));\n    }\n  }, {\n    Header: 'Assessment',\n    accessor: 'assessment',\n    Cell: ({\n      row\n    }) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"class-for-name\",\n        style: {\n          height: \"16px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, row.original.assessment), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"class-for-description\",\n        style: {\n          color: \"#909090\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, row.original.assessmentId));\n    }\n  }, {\n    Header: 'Created Date',\n    accessor: 'createdDate'\n  }, {\n    Header: 'External ID',\n    accessor: 'externalId'\n  }, {\n    Header: 'Last Activity',\n    accessor: 'lastActivity',\n    Cell: ({\n      row\n    }) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"class-for-name\",\n        style: {\n          height: \"16px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, row.original.lastActivity), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"class-for-description\",\n        style: {\n          color: \"#909090\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, row.original.lastActivityDate));\n    }\n  }];\n  /*const data = React.useMemo(() => makeData(20), [])*/\n\n  const data = [{\n    candidateName: \"Lillian Bennet\",\n    candidateEmail: \"lillianben@yahoo.com\",\n    candidateId: \"#782475\",\n    organization: \"HCL Technologies\",\n    organizationId: \"#245\",\n    assessment: \"Javascript Developer\",\n    assessmentId: \"#23554\",\n    createdDate: \"5 days ago\",\n    externalId: \"H28477\",\n    lastActivity: \"Invited for Assessment\",\n    lastActivityDate: \"2 days ago\",\n    profileImage: \"hello\"\n  }, {\n    candidateName: \"Nathan Reed\",\n    candidateEmail: \"nathan.reed@yahoo.com\",\n    candidateId: \"#647634\",\n    organization: \"Cognizant\",\n    organizationId: \"#333\",\n    assessment: \"Asynchronous\",\n    assessmentId: \"#87587\",\n    createdDate: \"12 days ago\",\n    externalId: \"C112322\",\n    lastActivity: \"Invited for Assessment\",\n    lastActivityDate: \"5 days ago\"\n  }, {\n    candidateName: \"Wasim Ekram\",\n    candidateEmail: \"lillianben@yahoo.com\",\n    candidateId: \"#782475\",\n    organization: \"HCL Technologies\",\n    organizationId: \"#245\",\n    assessment: \"Javascript Developer\",\n    assessmentId: \"#23554\",\n    createdDate: \"5 days ago\",\n    externalId: \"H28477\",\n    lastActivity: \"Invited for Assessment\",\n    lastActivityDate: \"2 days ago\"\n  }, {\n    candidateName: \"Shresht Juneja\",\n    candidateEmail: \"lillianben@yahoo.com\",\n    candidateId: \"#782475\",\n    organization: \"HCL Technologies\",\n    organizationId: \"#245\",\n    assessment: \"Javascript Developer\",\n    assessmentId: \"#23554\",\n    createdDate: \"5 days ago\",\n    externalId: \"H28477\",\n    lastActivity: \"Invited for Assessment\",\n    lastActivityDate: \"2 days ago\"\n  }, {\n    candidateName: \"Nathan Reed\",\n    candidateEmail: \"nathan.reed@yahoo.com\",\n    candidateId: \"#647634\",\n    organization: \"Cognizant\",\n    organizationId: \"#333\",\n    assessment: \"Asynchronous\",\n    assessmentId: \"#87587\",\n    createdDate: \"12 days ago\",\n    externalId: \"C112322\",\n    lastActivity: \"Invited for Assessment\",\n    lastActivityDate: \"5 days ago\"\n  }, {\n    candidateName: \"Lillian Bennet\",\n    candidateEmail: \"lillianben@yahoo.com\",\n    candidateId: \"#782475\",\n    organization: \"HCL Technologies\",\n    organizationId: \"#245\",\n    assessment: \"Javascript Developer\",\n    assessmentId: \"#23554\",\n    createdDate: \"5 days ago\",\n    externalId: \"H28477\",\n    lastActivity: \"Invited for Assessment\",\n    lastActivityDate: \"2 days ago\"\n  }, {\n    candidateName: \"Nathan Reed\",\n    candidateEmail: \"nathan.reed@yahoo.com\",\n    candidateId: \"#647634\",\n    organization: \"Cognizant\",\n    organizationId: \"#333\",\n    assessment: \"Asynchronous\",\n    assessmentId: \"#87587\",\n    createdDate: \"12 days ago\",\n    externalId: \"C112322\",\n    lastActivity: \"Invited for Assessment\",\n    lastActivityDate: \"5 days ago\"\n  }, {\n    candidateName: \"Lillian Bennet\",\n    candidateEmail: \"lillianben@yahoo.com\",\n    candidateId: \"#782475\",\n    organization: \"HCL Technologies\",\n    organizationId: \"#245\",\n    assessment: \"Javascript Developer\",\n    assessmentId: \"#23554\",\n    createdDate: \"5 days ago\",\n    externalId: \"H28477\",\n    lastActivity: \"Invited for Assessment\",\n    lastActivityDate: \"2 days ago\"\n  }, {\n    candidateName: \"Nathan Reed\",\n    candidateEmail: \"nathan.reed@yahoo.com\",\n    candidateId: \"#647634\",\n    organization: \"Cognizant\",\n    organizationId: \"#333\",\n    assessment: \"Asynchronous\",\n    assessmentId: \"#87587\",\n    createdDate: \"12 days ago\",\n    externalId: \"C112322\",\n    lastActivity: \"Invited for Assessment\",\n    lastActivityDate: \"5 days ago\"\n  }];\n  return React.createElement(Styles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435\n    },\n    __self: this\n  }, React.createElement(Table, {\n    columns: columns,\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436\n    },\n    __self: this\n  }));\n}\n\nexport default App;\n/*\nimport React from 'react'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport EnhancedTable from './components/EnhancedTable'\nimport makeData from './makeData'\n\nconst App = () => {\nconst columns = React.useMemo(\n() => [\n/!*{\nHeader: 'First Name',\naccessor: 'firstName',\n},\n{\n    Header: 'Last Name',\n    accessor: 'lastName',\n},\n{\n    Header: 'Age',\n    accessor: 'age',\n},\n{\n    Header: 'Visits',\n    accessor: 'visits',\n},\n{\n    Header: 'Status',\n    accessor: 'status',\n},\n{\n    Header: 'Profile Progress',\n    accessor: 'progress',\n},*!/\n{\n    Header: 'Candidate',\n    accessor: 'candidateName',\n},\n{\n    Header: 'Candidate ID',\n    accessor: 'candidateId',\n},\n{\n    Header: 'Organization',\n    accessor: 'organization',\n},\n{\n    Header: 'Assessment',\n    accessor: 'assessment',\n},\n{\n    Header: 'Created Date',\n    accessor: 'createdDate',\n},\n{\n    Header: 'External ID',\n    accessor: 'externalId',\n},\n{\n    Header: 'Last Activity',\n    accessor: 'lastActivity',\n},\n],\n[]\n)\n\nconst [data, setData] = React.useState(React.useMemo(() => makeData(40), []))\nconst [skipPageReset, setSkipPageReset] = React.useState(false)\n\n// We need to keep the table from resetting the pageIndex when we\n// Update data. So we can keep track of that flag with a ref.\n\n// When our cell renderer calls updateMyData, we'll use\n// the rowIndex, columnId and new value to update the\n// original data\nconst updateMyData = (rowIndex, columnId, value) => {\n// We also turn on the flag to not reset the page\nsetSkipPageReset(true)\nsetData(old =>\nold.map((row, index) => {\nif (index === rowIndex) {\nreturn {\n...old[rowIndex],\n[columnId]: value,\n}\n}\nreturn row\n})\n)\n}\n\nreturn (\n<div>\n    {/!*<CssBaseline / > * !/}\n        <EnhancedTable\n        columns={columns}\n        data={data}\n        setData={setData}\n        updateMyData={updateMyData}\n        skipPageReset={skipPageReset}\n        />\n        </div>\n        )\n    }\n\n    export default App\n\n    */","map":{"version":3,"sources":["/home/user/Downloads/BasicReact/basicreact/src/App.js"],"names":["React","styled","useExpanded","useFilters","useGroupBy","usePagination","useSortBy","useTable","Avatar","ConfigProvider","Styles","div","Table","columns","data","instance","getTableProps","headerGroups","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getTableBodyProps","rows","row","i","prepareRow","getRowProps","cells","cell","getCellProps","previousPage","canPreviousPage","nextPage","canNextPage","pageIndex","pageOptions","length","e","page","target","value","Number","gotoPage","pageSize","setPageSize","pageSizeOptions","mainContentStyle","height","width","color","fontFamily","fontSize","lineHeight","colors","App","Header","accessor","Cell","original","candidateName","candidateEmail","id","ignoreRowClick","candidateId","console","log","organization","assessment","assessmentId","lastActivity","lastActivityDate","organizationId","createdDate","externalId","profileImage"],"mappings":"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","sourcesContent":["/*\nimport React, { Component } from 'react';\nimport './App.css';\nimport HelloWorld from './components/HelloWorld';\n  import Select from './components/Select';\n\nclass App extends Component{\n \n  state = {\n\n    selected_value:\"text\",\n    select_id:\"\",\n    some_value:[\"date\",\"datetime\",\"email\"]\n\n    \n\n  }\n  \n  optionChangeHandler =(e)=>{\n    console.log(\"this is e\", e)\n    this.setState({\n\n      selected_value: e \n      \n\n    }\n  )\n  }\n\n  CallInterval =() =>{\n    console.log(\"intervall call\")\n  }\n\n\n render(){\n   console.log(\"final state\",this.state)\n  return (\n\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {  /!* <img src={logo} className=\"App-logo\" alt=\"logo\" />       *!/}\n         \n          <HelloWorld />\n\n          <Select select_id=\"type_of_input\" selected_value={this.state.selected_value} some_value={this.state.some_value} \n          changed={this.optionChangeHandler}\n\n          />\n           \n      </header>\n    </div>\n  );\n}\n}\nexport default App;\n*/\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport {useExpanded, useFilters, useGroupBy, usePagination, useSortBy, useTable} from 'react-table'\nimport Avatar, {ConfigProvider} from \"react-avatar\";\n\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    \n\n\n    tr {\n    \n      height: 70px;\n  width: 1318px;\n      color: #4A4A4A;\n      font-family: Roboto;\n      font-size: 14px;\n      font-weight: 500;\n      line-height: 19px;\n      :first-child {\n     td{border-top: 2px solid rgba(143,143,143,0.2);}\n      \n      }\n      :last-child {\n      \n        td {\n        color: green;\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      \n      :first-child{ \n      font-weight: bold;      \n      border-left: 2px solid rgba(143,143,143,0.2);\n      };\n      :second-child{color: green};\n      :last-child {\n      border-right: 2px solid rgba(143,143,143,0.2);     \n      }\n    }\n  }\n`\n\n// Use the useTable hook to create your table configuration\n\n\nfunction Table({columns, data}) {\n    // Use the state and functions returned from useTable to build your UI\n    \n    const instance= useTable({\n        columns,\n        data,\n        useGroupBy,\n        useFilters,\n        useSortBy,\n        useExpanded,\n        usePagination\n    })\n\n    // Render the UI for your table\n    return (\n        <div>\n            <table {...getTableProps()}>\n                <thead>\n                {headerGroups.map(headerGroup => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map(column => (\n                            <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                        ))}\n                    </tr>\n                ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                {rows.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                            })}\n                        </tr>\n                    )\n                })}\n                </tbody>\n            </table>\n            <div>\n                <button onClick={() => previousPage()}\n                        disabled={\n                            !canPreviousPage\n                        }>\n                    Previous\n                    Page\n                </button>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n                <div>\n                    Page\n                    {\n                        ' '\n                    }\n                    <em>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                <div>Go to page:</div>\n                < input\n                    type=\"number\"\n                    defaultValue={pageIndex + 1 || 1}\n                    onChange={e => {\n                        const page = e.target.value ? Number(e.target.value) - 1 : 0\n                        gotoPage(page)\n                    }\n                    }\n                />\n                <select\n                    value={pageSize}\n                    onChange={e => {\n                        setPageSize(Number(e.target.value))\n                    }}\n                >\n                    {pageSizeOptions.map(pageSize => (\n                        <option key={pageSize} value={pageSize}>\n                            Show {pageSize}\n                        </option>\n                    ))}\n                </select>\n            </div>\n        </div>\n    )\n}\n\nlet mainContentStyle = {\n    height: \"16px\",\n    width: \"144px\",\n    color: \"red\",\n    fontFamily: \"Roboto\",\n    fontSize: \"14px\",\n    lineHeight: \"19px\"\n}\n\nlet colors = ['black', 'green', 'blue']\n\n\nfunction App() {\n    const columns = [\n        {\n            Header: '',\n            accessor: 'profileImage',\n            Cell: ({row}) => {\n                return (\n                    <div>\n                            <span className=\"class-for-name\" style={{height: \"16px\"}}><ConfigProvider\n                                colors={colors}><Avatar name={row.original.candidateName} size=\"30\"\n                                                        round={true}/></ConfigProvider></span>\n                    </div>\n                )\n            }\n        },\n        {\n            /*Header: ' ',\n            columns: [\n                {*/\n            Header: 'Candidate',\n            accessor: 'candidateName',\n            Cell: ({row}) => {\n                return (\n                    <div>\n                            <span className=\"class-for-name\"\n                                  style={{height: \"16px\"}}>{row.original.candidateName}</span>\n                        <br></br>\n                        <span className=\"class-for-description\"\n                              style={{color: \"#909090\"}}>{row.original.candidateEmail}</span>\n                    </div>\n                )\n            }\n        },\n        {\n            Header: 'Candidate ID',\n            id: \"candidateId\",\n            accessor: \"candidateId\",\n            ignoreRowClick: true,\n            Cell: ({row}) => <a href={row.original.candidateId} onClick={() => {\n            }}>{row.original.candidateId}</a>,\n\n        },\n        {\n            Header: 'Organization',\n            accessor: 'organization',\n            Cell: ({row}) => {\n                return (\n                    <div>\n                            <span onMouseOver={() => {\n                                console.log(\"henlo\")\n                            }} className=\"class-for-name\" style={{height: \"16px\"}}>{row.original.organization}</span>\n                        <br></br>\n                        <span className=\"class-for-description\"\n                              style={{color: \"#909090\"}}>{row.original.organization}</span>\n                    </div>\n                )\n            }\n        },\n        {\n            Header: 'Assessment',\n            accessor: 'assessment',\n            Cell: ({row}) => {\n                return (\n                    <div>\n                        <span className=\"class-for-name\" style={{height: \"16px\"}}>{row.original.assessment}</span>\n                        <br></br>\n                        <span className=\"class-for-description\"\n                              style={{color: \"#909090\"}}>{row.original.assessmentId}</span>\n                    </div>\n                )\n            }\n        },\n        {\n            Header: 'Created Date',\n            accessor: 'createdDate',\n        },\n        {\n            Header: 'External ID',\n            accessor: 'externalId',\n        },\n        {\n            Header: 'Last Activity',\n            accessor: 'lastActivity',\n            Cell: ({row}) => {\n                return (\n                    <div>\n                        <span className=\"class-for-name\" style={{height: \"16px\"}}>{row.original.lastActivity}</span>\n                        <br></br>\n                        <span className=\"class-for-description\"\n                              style={{color: \"#909090\"}}>{row.original.lastActivityDate}</span>\n                    </div>\n                )\n            }\n        },\n    ]\n\n    /*const data = React.useMemo(() => makeData(20), [])*/\n    const data = [{\n        candidateName: \"Lillian Bennet\",\n        candidateEmail: \"lillianben@yahoo.com\",\n        candidateId: \"#782475\",\n        organization: \"HCL Technologies\",\n        organizationId: \"#245\",\n        assessment: \"Javascript Developer\",\n        assessmentId: \"#23554\",\n        createdDate: \"5 days ago\",\n        externalId: \"H28477\",\n        lastActivity: \"Invited for Assessment\",\n        lastActivityDate: \"2 days ago\",\n        profileImage: \"hello\"\n\n    },\n        {\n            candidateName: \"Nathan Reed\",\n            candidateEmail: \"nathan.reed@yahoo.com\",\n            candidateId: \"#647634\",\n            organization: \"Cognizant\",\n            organizationId: \"#333\",\n            assessment: \"Asynchronous\",\n            assessmentId: \"#87587\",\n            createdDate: \"12 days ago\",\n            externalId: \"C112322\",\n            lastActivity: \"Invited for Assessment\",\n            lastActivityDate: \"5 days ago\"\n\n        },\n        {\n            candidateName: \"Wasim Ekram\",\n            candidateEmail: \"lillianben@yahoo.com\",\n            candidateId: \"#782475\",\n            organization: \"HCL Technologies\",\n            organizationId: \"#245\",\n            assessment: \"Javascript Developer\",\n            assessmentId: \"#23554\",\n            createdDate: \"5 days ago\",\n            externalId: \"H28477\",\n            lastActivity: \"Invited for Assessment\",\n            lastActivityDate: \"2 days ago\"\n\n        },\n        {\n            candidateName: \"Shresht Juneja\",\n            candidateEmail: \"lillianben@yahoo.com\",\n            candidateId: \"#782475\",\n            organization: \"HCL Technologies\",\n            organizationId: \"#245\",\n            assessment: \"Javascript Developer\",\n            assessmentId: \"#23554\",\n            createdDate: \"5 days ago\",\n            externalId: \"H28477\",\n            lastActivity: \"Invited for Assessment\",\n            lastActivityDate: \"2 days ago\"\n\n        },\n        {\n            candidateName: \"Nathan Reed\",\n            candidateEmail: \"nathan.reed@yahoo.com\",\n            candidateId: \"#647634\",\n            organization: \"Cognizant\",\n            organizationId: \"#333\",\n            assessment: \"Asynchronous\",\n            assessmentId: \"#87587\",\n            createdDate: \"12 days ago\",\n            externalId: \"C112322\",\n            lastActivity: \"Invited for Assessment\",\n            lastActivityDate: \"5 days ago\"\n\n        }, {\n            candidateName: \"Lillian Bennet\",\n            candidateEmail: \"lillianben@yahoo.com\",\n            candidateId: \"#782475\",\n            organization: \"HCL Technologies\",\n            organizationId: \"#245\",\n            assessment: \"Javascript Developer\",\n            assessmentId: \"#23554\",\n            createdDate: \"5 days ago\",\n            externalId: \"H28477\",\n            lastActivity: \"Invited for Assessment\",\n            lastActivityDate: \"2 days ago\"\n\n        },\n        {\n            candidateName: \"Nathan Reed\",\n            candidateEmail: \"nathan.reed@yahoo.com\",\n            candidateId: \"#647634\",\n            organization: \"Cognizant\",\n            organizationId: \"#333\",\n            assessment: \"Asynchronous\",\n            assessmentId: \"#87587\",\n            createdDate: \"12 days ago\",\n            externalId: \"C112322\",\n            lastActivity: \"Invited for Assessment\",\n            lastActivityDate: \"5 days ago\"\n\n        }, {\n            candidateName: \"Lillian Bennet\",\n            candidateEmail: \"lillianben@yahoo.com\",\n            candidateId: \"#782475\",\n            organization: \"HCL Technologies\",\n            organizationId: \"#245\",\n            assessment: \"Javascript Developer\",\n            assessmentId: \"#23554\",\n            createdDate: \"5 days ago\",\n            externalId: \"H28477\",\n            lastActivity: \"Invited for Assessment\",\n            lastActivityDate: \"2 days ago\"\n\n        },\n        {\n            candidateName: \"Nathan Reed\",\n            candidateEmail: \"nathan.reed@yahoo.com\",\n            candidateId: \"#647634\",\n            organization: \"Cognizant\",\n            organizationId: \"#333\",\n            assessment: \"Asynchronous\",\n            assessmentId: \"#87587\",\n            createdDate: \"12 days ago\",\n            externalId: \"C112322\",\n            lastActivity: \"Invited for Assessment\",\n            lastActivityDate: \"5 days ago\"\n\n        }]\n\n    return (\n        <Styles>\n            <Table columns={columns} data={data}/>\n        </Styles>\n    )\n}\n\nexport default App\n\n\n/*\nimport React from 'react'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport EnhancedTable from './components/EnhancedTable'\nimport makeData from './makeData'\n\nconst App = () => {\nconst columns = React.useMemo(\n() => [\n/!*{\nHeader: 'First Name',\naccessor: 'firstName',\n},\n{\n    Header: 'Last Name',\n    accessor: 'lastName',\n},\n{\n    Header: 'Age',\n    accessor: 'age',\n},\n{\n    Header: 'Visits',\n    accessor: 'visits',\n},\n{\n    Header: 'Status',\n    accessor: 'status',\n},\n{\n    Header: 'Profile Progress',\n    accessor: 'progress',\n},*!/\n{\n    Header: 'Candidate',\n    accessor: 'candidateName',\n},\n{\n    Header: 'Candidate ID',\n    accessor: 'candidateId',\n},\n{\n    Header: 'Organization',\n    accessor: 'organization',\n},\n{\n    Header: 'Assessment',\n    accessor: 'assessment',\n},\n{\n    Header: 'Created Date',\n    accessor: 'createdDate',\n},\n{\n    Header: 'External ID',\n    accessor: 'externalId',\n},\n{\n    Header: 'Last Activity',\n    accessor: 'lastActivity',\n},\n],\n[]\n)\n\nconst [data, setData] = React.useState(React.useMemo(() => makeData(40), []))\nconst [skipPageReset, setSkipPageReset] = React.useState(false)\n\n// We need to keep the table from resetting the pageIndex when we\n// Update data. So we can keep track of that flag with a ref.\n\n// When our cell renderer calls updateMyData, we'll use\n// the rowIndex, columnId and new value to update the\n// original data\nconst updateMyData = (rowIndex, columnId, value) => {\n// We also turn on the flag to not reset the page\nsetSkipPageReset(true)\nsetData(old =>\nold.map((row, index) => {\nif (index === rowIndex) {\nreturn {\n...old[rowIndex],\n[columnId]: value,\n}\n}\nreturn row\n})\n)\n}\n\nreturn (\n<div>\n    {/!*<CssBaseline / > * !/}\n        <EnhancedTable\n        columns={columns}\n        data={data}\n        setData={setData}\n        updateMyData={updateMyData}\n        skipPageReset={skipPageReset}\n        />\n        </div>\n        )\n    }\n\n    export default App\n\n    */\n"]},"metadata":{},"sourceType":"module"}