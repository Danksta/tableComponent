{"ast":null,"code":"var _jsxFileName = \"/home/user/Downloads/BasicReact/basicreact/src/Table.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { usePagination, useTable } from 'react-table';\nimport Avatar, { ConfigProvider } from \"react-avatar\";\nimport { data1 } from './Data';\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    \n\n\n    tr {\n    \n      height: 70px;\n  width: 1318px;\n      color: #4A4A4A;\n      font-family: Roboto;\n      font-size: 14px;\n      font-weight: 500;\n      line-height: 19px;\n      :first-child {\n     td{border-top: 2px solid rgba(143,143,143,0.2);}\n      \n      }\n      :last-child {\n      \n        td {\n        color: green;\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      \n      :first-child{ \n      font-weight: bold;      \n      border-left: 2px solid rgba(143,143,143,0.2);\n      };\n      :second-child{color: green};\n      :last-child {\n      border-right: 2px solid rgba(143,143,143,0.2);     \n      }\n    }\n  }\n`; // Use the useTable hook to create your table configuration\n\nconsole.log(\"data is \" + JSON.stringify(data1));\nlet data = data1;\n\nfunction Table({\n  columns,\n  data\n}) {\n  // Use the state and functions returned from useTable to build your UI\n  let {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: {\n      pageIndex,\n      pageSize\n    }\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 2\n    }\n  }, usePagination);\n  pageIndex = 0; // Render the UI for your table\n\n  return React.createElement(React.Fragment, null, React.createElement(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, JSON.stringify({\n    pageIndex,\n    pageSize,\n    pageCount,\n    canNextPage,\n    canPreviousPage\n  }, null, 2))), React.createElement(\"table\", Object.assign({}, getTableProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, headerGroups.map(headerGroup => React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), headerGroup.headers.map(column => React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), column.render('Header')))))), React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), page.map((row, i) => {\n    prepareRow(row);\n    return React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), row.cells.map(cell => {\n      return React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), cell.render('Cell'));\n    }));\n  }))), React.createElement(\"div\", {\n    className: \"pagination\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => gotoPage(0),\n    disabled: !canPreviousPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, '<<'), ' ', React.createElement(\"button\", {\n    onClick: () => previousPage(),\n    disabled: !canPreviousPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, '<'), ' ', React.createElement(\"button\", {\n    onClick: () => nextPage(),\n    disabled: !canNextPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, '>'), ' ', React.createElement(\"button\", {\n    onClick: () => gotoPage(pageCount - 1),\n    disabled: !canNextPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, '>>'), ' ', React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Page\", ' ', React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, pageIndex + 1, \" of \", pageOptions.length), ' '), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"| Go to page:\", ' ', React.createElement(\"input\", {\n    type: \"number\",\n    defaultValue: pageIndex + 1,\n    onChange: e => {\n      const page = e.target.value ? Number(e.target.value) - 1 : 0;\n      gotoPage(page);\n    },\n    style: {\n      width: '100px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  })), ' ', React.createElement(\"select\", {\n    value: pageSize,\n    onChange: e => {\n      setPageSize(Number(e.target.value));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, [10, 20, 30, 40, 50].map(pageSize => React.createElement(\"option\", {\n    key: pageSize,\n    value: pageSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Show \", pageSize)))));\n}\n\nlet mainContentStyle = {\n  height: \"16px\",\n  width: \"144px\",\n  color: \"red\",\n  fontFamily: \"Roboto\",\n  fontSize: \"14px\",\n  lineHeight: \"19px\"\n};\nlet colors = ['black', 'green', 'blue'];\n\nfunction CustomTable() {\n  const columns = [{\n    Header: '',\n    accessor: 'profileImage',\n    Cell: ({\n      row\n    }) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"class-for-name\",\n        style: {\n          height: \"16px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(ConfigProvider, {\n        colors: colors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        name: row.original.candidateName,\n        size: \"30\",\n        round: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    /*Header: ' ',\n    columns: [\n        {*/\n    Header: 'Candidate',\n    accessor: 'candidateName',\n    Cell: ({\n      row\n    }) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"class-for-name\",\n        style: {\n          height: \"16px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, row.original.candidateName), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"class-for-description\",\n        style: {\n          color: \"#909090\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, row.original.candidateEmail));\n    }\n  }, {\n    Header: 'Candidate ID',\n    id: \"candidateId\",\n    accessor: \"candidateId\",\n    ignoreRowClick: true,\n    Cell: ({\n      row\n    }) => React.createElement(\"a\", {\n      href: row.original.candidateId,\n      onClick: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, row.original.candidateId)\n  }, {\n    Header: 'Organization',\n    accessor: 'organization',\n    Cell: ({\n      row\n    }) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onMouseOver: () => {\n          console.log(\"henlo\");\n        },\n        className: \"class-for-name\",\n        style: {\n          height: \"16px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, row.original.organization), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"class-for-description\",\n        style: {\n          color: \"#909090\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, row.original.organization));\n    }\n  }, {\n    Header: 'Assessment',\n    accessor: 'assessment',\n    Cell: ({\n      row\n    }) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"class-for-name\",\n        style: {\n          height: \"16px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, row.original.assessment), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"class-for-description\",\n        style: {\n          color: \"#909090\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, row.original.assessmentId));\n    }\n  }, {\n    Header: 'Created Date',\n    accessor: 'createdDate'\n  }, {\n    Header: 'External ID',\n    accessor: 'externalId'\n  }, {\n    Header: 'Last Activity',\n    accessor: 'lastActivity',\n    Cell: ({\n      row\n    }) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"class-for-name\",\n        style: {\n          height: \"16px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, row.original.lastActivity), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"class-for-description\",\n        style: {\n          color: \"#909090\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, row.original.lastActivityDate));\n    }\n  }];\n  /*const data = React.useMemo(() => makeData(20), [])*/\n\n  return React.createElement(Styles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, React.createElement(Table, {\n    columns: columns,\n    data: data,\n    pageIndex: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }));\n}\n\nexport default CustomTable;","map":{"version":3,"sources":["/home/user/Downloads/BasicReact/basicreact/src/Table.js"],"names":["React","styled","usePagination","useTable","Avatar","ConfigProvider","data1","Styles","div","console","log","JSON","stringify","data","Table","columns","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","initialState","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","length","e","target","value","Number","width","mainContentStyle","height","color","fontFamily","fontSize","lineHeight","colors","CustomTable","Header","accessor","Cell","original","candidateName","candidateEmail","id","ignoreRowClick","candidateId","organization","assessment","assessmentId","lastActivity","lastActivityDate"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport styled from 'styled-components'\nimport {usePagination, useTable} from 'react-table'\nimport Avatar, {ConfigProvider} from \"react-avatar\";\nimport {data1} from './Data'\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    \n\n\n    tr {\n    \n      height: 70px;\n  width: 1318px;\n      color: #4A4A4A;\n      font-family: Roboto;\n      font-size: 14px;\n      font-weight: 500;\n      line-height: 19px;\n      :first-child {\n     td{border-top: 2px solid rgba(143,143,143,0.2);}\n      \n      }\n      :last-child {\n      \n        td {\n        color: green;\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      \n      :first-child{ \n      font-weight: bold;      \n      border-left: 2px solid rgba(143,143,143,0.2);\n      };\n      :second-child{color: green};\n      :last-child {\n      border-right: 2px solid rgba(143,143,143,0.2);     \n      }\n    }\n  }\n`\n\n// Use the useTable hook to create your table configuration\nconsole.log(\"data is \" + JSON.stringify(data1))\nlet data = data1\nfunction Table({columns, data}) {\n    // Use the state and functions returned from useTable to build your UI\n    let {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        page, // Instead of using 'rows', we'll use page,\n        // which has only the rows for the active page\n\n        // The rest of these things are super handy, too ;)\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state: {pageIndex, pageSize},\n    } = useTable(\n        {\n            columns,\n            data,\n            initialState: {pageIndex: 2},\n        },\n        usePagination\n    )\n    pageIndex=0\n\n    // Render the UI for your table\n    return (\n        <>\n      <pre>\n        <code>\n          {JSON.stringify(\n              {\n                  pageIndex,\n                  pageSize,\n                  pageCount,\n                  canNextPage,\n                  canPreviousPage,\n              },\n              null,\n              2\n          )}\n        </code>\n      </pre>\n            <table {...getTableProps()}>\n                <thead>\n                {headerGroups.map(headerGroup => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map(column => (\n                            <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                        ))}\n                    </tr>\n                ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                {page.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                            })}\n                        </tr>\n                    )\n                })}\n                </tbody>\n            </table>\n            {/*\n        Pagination can be built however you'd like.\n        This is just a very basic UI implementation:\n      */}\n            <div className=\"pagination\">\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                    {'<<'}\n                </button>\n                {' '}\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    {'<'}\n                </button>\n                {' '}\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    {'>'}\n                </button>\n                {' '}\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n                    {'>>'}\n                </button>\n                {' '}\n                <span>\n          Page{' '}\n                    <strong>\n            {pageIndex + 1} of {pageOptions.length}\n          </strong>{' '}\n        </span>\n                <span>\n          | Go to page:{' '}\n                    <input\n                        type=\"number\"\n                        defaultValue={pageIndex + 1}\n                        onChange={e => {\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0\n                            gotoPage(page)\n                        }}\n                        style={{width: '100px'}}\n                    />\n        </span>{' '}\n                <select\n                    value={pageSize}\n                    onChange={e => {\n                        setPageSize(Number(e.target.value))\n                    }}\n                >\n                    {[10, 20, 30, 40, 50].map(pageSize => (\n                        <option key={pageSize} value={pageSize}>\n                            Show {pageSize}\n                        </option>\n                    ))}\n                </select>\n            </div>\n        </>\n    )\n}\n\nlet mainContentStyle = {\n    height: \"16px\",\n    width: \"144px\",\n    color: \"red\",\n    fontFamily: \"Roboto\",\n    fontSize: \"14px\",\n    lineHeight: \"19px\"\n}\n\nlet colors = ['black', 'green', 'blue']\n\n\nfunction CustomTable() {\n\n\n    const columns = [\n        {\n            Header: '',\n            accessor: 'profileImage',\n            Cell: ({row}) => {\n                return (\n                    <div>\n                            <span className=\"class-for-name\" style={{height: \"16px\"}}><ConfigProvider\n                                colors={colors}><Avatar name={row.original.candidateName} size=\"30\"\n                                                        round={true}/></ConfigProvider></span>\n                    </div>\n                )\n            }\n        },\n        {\n            /*Header: ' ',\n            columns: [\n                {*/\n            Header: 'Candidate',\n            accessor: 'candidateName',\n            Cell: ({row}) => {\n                return (\n                    <div>\n                            <span className=\"class-for-name\"\n                                  style={{height: \"16px\"}}>{row.original.candidateName}</span>\n                        <br></br>\n                        <span className=\"class-for-description\"\n                              style={{color: \"#909090\"}}>{row.original.candidateEmail}</span>\n                    </div>\n                )\n            }\n        },\n        {\n            Header: 'Candidate ID',\n            id: \"candidateId\",\n            accessor: \"candidateId\",\n            ignoreRowClick: true,\n            Cell: ({row}) => <a href={row.original.candidateId} onClick={() => {\n            }}>{row.original.candidateId}</a>,\n\n        },\n        {\n            Header: 'Organization',\n            accessor: 'organization',\n            Cell: ({row}) => {\n                return (\n                    <div>\n                            <span onMouseOver={() => {\n                                console.log(\"henlo\")\n                            }} className=\"class-for-name\" style={{height: \"16px\"}}>{row.original.organization}</span>\n                        <br></br>\n                        <span className=\"class-for-description\"\n                              style={{color: \"#909090\"}}>{row.original.organization}</span>\n                    </div>\n                )\n            }\n        },\n        {\n            Header: 'Assessment',\n            accessor: 'assessment',\n            Cell: ({row}) => {\n                return (\n                    <div>\n                        <span className=\"class-for-name\" style={{height: \"16px\"}}>{row.original.assessment}</span>\n                        <br></br>\n                        <span className=\"class-for-description\"\n                              style={{color: \"#909090\"}}>{row.original.assessmentId}</span>\n                    </div>\n                )\n            }\n        },\n        {\n            Header: 'Created Date',\n            accessor: 'createdDate',\n        },\n        {\n            Header: 'External ID',\n            accessor: 'externalId',\n        },\n        {\n            Header: 'Last Activity',\n            accessor: 'lastActivity',\n            Cell: ({row}) => {\n                return (\n                    <div>\n                        <span className=\"class-for-name\" style={{height: \"16px\"}}>{row.original.lastActivity}</span>\n                        <br></br>\n                        <span className=\"class-for-description\"\n                              style={{color: \"#909090\"}}>{row.original.lastActivityDate}</span>\n                    </div>\n                )\n            }\n        },\n    ]\n\n    /*const data = React.useMemo(() => makeData(20), [])*/\n\n\n    return (\n        <Styles>\n            <Table columns={columns} data={data} pageIndex={0}/>\n        </Styles>\n    )\n}\n\nexport default CustomTable"]},"metadata":{},"sourceType":"module"}