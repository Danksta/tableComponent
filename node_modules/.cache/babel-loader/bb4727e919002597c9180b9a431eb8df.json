{"ast":null,"code":"var _jsxFileName = \"/home/user/Downloads/BasicReact/basicreact/src/App.js\";\n\n/*\nimport React, { Component } from 'react';\nimport './App.css';\nimport HelloWorld from './components/HelloWorld';\n  import Select from './components/Select';\n\nclass App extends Component{\n \n  state = {\n\n    selected_value:\"text\",\n    select_id:\"\",\n    some_value:[\"date\",\"datetime\",\"email\"]\n\n    \n\n  }\n  \n  optionChangeHandler =(e)=>{\n    console.log(\"this is e\", e)\n    this.setState({\n\n      selected_value: e \n      \n\n    }\n  )\n  }\n\n  CallInterval =() =>{\n    console.log(\"intervall call\")\n  }\n\n\n render(){\n   console.log(\"final state\",this.state)\n  return (\n\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {  /!* <img src={logo} className=\"App-logo\" alt=\"logo\" />       *!/}\n         \n          <HelloWorld />\n\n          <Select select_id=\"type_of_input\" selected_value={this.state.selected_value} some_value={this.state.some_value} \n          changed={this.optionChangeHandler}\n\n          />\n           \n      </header>\n    </div>\n  );\n}\n}\nexport default App;\n*/\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTable } from 'react-table';\nimport Avatar, { ConfigProvider } from 'react-avatar';\nimport makeData from './makeData';\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    \n\n\n    tr {\n    \n      height: 70px;\n  width: 1318px;\n      color: #4A4A4A;\n      font-family: Roboto;\n      font-size: 14px;\n      font-weight: 500;\n      line-height: 19px;\n      :first-child {\n     td{border-top: 2px solid rgba(143,143,143,0.2);}\n      \n      }\n      :last-child {\n      \n        td {\n        color: green;\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      \n      :first-child{ \n      font-weight: bold;      \n      border-left: 2px solid rgba(143,143,143,0.2);\n      };\n      :second-child{color: green};\n      :last-child {\n      border-right: 2px solid rgba(143,143,143,0.2);     \n      }\n    }\n  }\n`;\n\nfunction Table({\n  columns,\n  data\n}) {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }); // Render the UI for your table\n\n  return React.createElement(\"table\", Object.assign({}, getTableProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, headerGroups.map(headerGroup => React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), headerGroup.headers.map(column => React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), column.render('Header')))))), React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), rows.map((row, i) => {\n    prepareRow(row);\n    return React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), row.cells.map(cell => {\n      return React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), cell.render('Cell'));\n    }));\n  })));\n}\n\nlet mainContentStyle = {\n  height: \"16px\",\n  width: \"144px\",\n  color: \"red\",\n  fontFamily: \"Roboto\",\n  fontSize: \"14px\",\n  lineHeight: \"19px\"\n};\n\nfunction App() {\n  const columns = [{\n    Header: '',\n    accessor: 'profileImage',\n    Cell: ({\n      row\n    }) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"class-for-name\",\n        style: {\n          height: \"16px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(ConfigProvider, {\n        colors: ['black', 'green', 'blue'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        name: row.original.candidateName,\n        size: \"30\",\n        round: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    /*Header: ' ',\n    columns: [\n        {*/\n    Header: 'Candidate',\n    accessor: 'candidateName',\n    Cell: ({\n      row\n    }) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"class-for-name\",\n        style: {\n          height: \"16px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, row.original.candidateName), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"class-for-description\",\n        style: {\n          color: \"#909090\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, row.original.candidateEmail));\n    }\n  }, {\n    Header: 'Candidate ID',\n    id: \"candidateId\",\n    accessor: \"candidateId\",\n    ignoreRowClick: true,\n    Cell: ({\n      row\n    }) => React.createElement(\"a\", {\n      href: row.original.candidateId,\n      onClick: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, row.original.candidateId)\n  }, {\n    Header: 'Organization',\n    accessor: 'organization',\n    Cell: ({\n      row\n    }) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"class-for-name\",\n        style: {\n          height: \"16px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, row.original.organization), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"class-for-description\",\n        style: {\n          color: \"#909090\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, row.original.organization));\n    }\n  }, {\n    Header: 'Assessment',\n    accessor: 'assessment',\n    Cell: ({\n      row\n    }) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"class-for-name\",\n        style: {\n          height: \"16px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, row.original.assessment), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"class-for-description\",\n        style: {\n          color: \"#909090\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, row.original.assessmentId));\n    }\n  }, {\n    Header: 'Created Date',\n    accessor: 'createdDate'\n  }, {\n    Header: 'External ID',\n    accessor: 'externalId'\n  }, {\n    Header: 'Last Activity',\n    accessor: 'lastActivity',\n    Cell: ({\n      row\n    }) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"class-for-name\",\n        style: {\n          height: \"16px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, row.original.lastActivity), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"class-for-description\",\n        style: {\n          color: \"#909090\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, row.original.lastActivityDate));\n    }\n  }];\n  /*const data = React.useMemo(() => makeData(20), [])*/\n\n  const data = [{\n    candidateName: \"Lillian Bennet\",\n    candidateEmail: \"lillianben@yahoo.com\",\n    candidateId: \"#782475\",\n    organization: \"HCL Technologies\",\n    organizationId: \"#245\",\n    assessment: \"Javascript Developer\",\n    assessmentId: \"#23554\",\n    createdDate: \"5 days ago\",\n    externalId: \"H28477\",\n    lastActivity: \"Invited for Assessment\",\n    lastActivityDate: \"2 days ago\",\n    profileImage: \"hello\"\n  }, {\n    candidateName: \"Nathan Reed\",\n    candidateEmail: \"nathan.reed@yahoo.com\",\n    candidateId: \"#647634\",\n    organization: \"Cognizant\",\n    organizationId: \"#333\",\n    assessment: \"Asynchronous\",\n    assessmentId: \"#87587\",\n    createdDate: \"12 days ago\",\n    externalId: \"C112322\",\n    lastActivity: \"Invited for Assessment\",\n    lastActivityDate: \"5 days ago\"\n  }, {\n    candidateName: \"Wasim Ekram\",\n    candidateEmail: \"lillianben@yahoo.com\",\n    candidateId: \"#782475\",\n    organization: \"HCL Technologies\",\n    organizationId: \"#245\",\n    assessment: \"Javascript Developer\",\n    assessmentId: \"#23554\",\n    createdDate: \"5 days ago\",\n    externalId: \"H28477\",\n    lastActivity: \"Invited for Assessment\",\n    lastActivityDate: \"2 days ago\"\n  }, {\n    candidateName: \"Shresht Juneja\",\n    candidateEmail: \"lillianben@yahoo.com\",\n    candidateId: \"#782475\",\n    organization: \"HCL Technologies\",\n    organizationId: \"#245\",\n    assessment: \"Javascript Developer\",\n    assessmentId: \"#23554\",\n    createdDate: \"5 days ago\",\n    externalId: \"H28477\",\n    lastActivity: \"Invited for Assessment\",\n    lastActivityDate: \"2 days ago\"\n  }, {\n    candidateName: \"Nathan Reed\",\n    candidateEmail: \"nathan.reed@yahoo.com\",\n    candidateId: \"#647634\",\n    organization: \"Cognizant\",\n    organizationId: \"#333\",\n    assessment: \"Asynchronous\",\n    assessmentId: \"#87587\",\n    createdDate: \"12 days ago\",\n    externalId: \"C112322\",\n    lastActivity: \"Invited for Assessment\",\n    lastActivityDate: \"5 days ago\"\n  }, {\n    candidateName: \"Lillian Bennet\",\n    candidateEmail: \"lillianben@yahoo.com\",\n    candidateId: \"#782475\",\n    organization: \"HCL Technologies\",\n    organizationId: \"#245\",\n    assessment: \"Javascript Developer\",\n    assessmentId: \"#23554\",\n    createdDate: \"5 days ago\",\n    externalId: \"H28477\",\n    lastActivity: \"Invited for Assessment\",\n    lastActivityDate: \"2 days ago\"\n  }, {\n    candidateName: \"Nathan Reed\",\n    candidateEmail: \"nathan.reed@yahoo.com\",\n    candidateId: \"#647634\",\n    organization: \"Cognizant\",\n    organizationId: \"#333\",\n    assessment: \"Asynchronous\",\n    assessmentId: \"#87587\",\n    createdDate: \"12 days ago\",\n    externalId: \"C112322\",\n    lastActivity: \"Invited for Assessment\",\n    lastActivityDate: \"5 days ago\"\n  }, {\n    candidateName: \"Lillian Bennet\",\n    candidateEmail: \"lillianben@yahoo.com\",\n    candidateId: \"#782475\",\n    organization: \"HCL Technologies\",\n    organizationId: \"#245\",\n    assessment: \"Javascript Developer\",\n    assessmentId: \"#23554\",\n    createdDate: \"5 days ago\",\n    externalId: \"H28477\",\n    lastActivity: \"Invited for Assessment\",\n    lastActivityDate: \"2 days ago\"\n  }, {\n    candidateName: \"Nathan Reed\",\n    candidateEmail: \"nathan.reed@yahoo.com\",\n    candidateId: \"#647634\",\n    organization: \"Cognizant\",\n    organizationId: \"#333\",\n    assessment: \"Asynchronous\",\n    assessmentId: \"#87587\",\n    createdDate: \"12 days ago\",\n    externalId: \"C112322\",\n    lastActivity: \"Invited for Assessment\",\n    lastActivityDate: \"5 days ago\"\n  }];\n  return React.createElement(Styles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382\n    },\n    __self: this\n  }, React.createElement(Table, {\n    columns: columns,\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383\n    },\n    __self: this\n  }));\n}\n\nexport default App;\n/*\nimport React from 'react'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport EnhancedTable from './components/EnhancedTable'\nimport makeData from './makeData'\n\nconst App = () => {\n    const columns = React.useMemo(\n        () => [\n            /!*{\n                Header: 'First Name',\n                accessor: 'firstName',\n            },\n            {\n                Header: 'Last Name',\n                accessor: 'lastName',\n            },\n            {\n                Header: 'Age',\n                accessor: 'age',\n            },\n            {\n                Header: 'Visits',\n                accessor: 'visits',\n            },\n            {\n                Header: 'Status',\n                accessor: 'status',\n            },\n            {\n                Header: 'Profile Progress',\n                accessor: 'progress',\n            },*!/\n            {\n                Header: 'Candidate',\n                accessor: 'candidateName',\n            },\n            {\n                Header: 'Candidate ID',\n                accessor: 'candidateId',\n            },\n            {\n                Header: 'Organization',\n                accessor: 'organization',\n            },\n            {\n                Header: 'Assessment',\n                accessor: 'assessment',\n            },\n            {\n                Header: 'Created Date',\n                accessor: 'createdDate',\n            },\n            {\n                Header: 'External ID',\n                accessor: 'externalId',\n            },\n            {\n                Header: 'Last Activity',\n                accessor: 'lastActivity',\n            },\n        ],\n        []\n    )\n\n    const [data, setData] = React.useState(React.useMemo(() => makeData(40), []))\n    const [skipPageReset, setSkipPageReset] = React.useState(false)\n\n    // We need to keep the table from resetting the pageIndex when we\n    // Update data. So we can keep track of that flag with a ref.\n\n    // When our cell renderer calls updateMyData, we'll use\n    // the rowIndex, columnId and new value to update the\n    // original data\n    const updateMyData = (rowIndex, columnId, value) => {\n        // We also turn on the flag to not reset the page\n        setSkipPageReset(true)\n        setData(old =>\n            old.map((row, index) => {\n                if (index === rowIndex) {\n                    return {\n                        ...old[rowIndex],\n                        [columnId]: value,\n                    }\n                }\n                return row\n            })\n        )\n    }\n\n    return (\n        <div>\n            {/!*<CssBaseline />*!/}\n            <EnhancedTable\n                columns={columns}\n                data={data}\n                setData={setData}\n                updateMyData={updateMyData}\n                skipPageReset={skipPageReset}\n            />\n        </div>\n    )\n}\n\nexport default App\n\n*/","map":{"version":3,"sources":["/home/user/Downloads/BasicReact/basicreact/src/App.js"],"names":["React","styled","useTable","Avatar","ConfigProvider","makeData","Styles","div","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","mainContentStyle","height","width","color","fontFamily","fontSize","lineHeight","App","Header","accessor","Cell","original","candidateName","candidateEmail","id","ignoreRowClick","candidateId","organization","assessment","assessmentId","lastActivity","lastActivityDate","organizationId","createdDate","externalId","profileImage"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,MAAP,IAAiBC,cAAjB,QAAuC,cAAvC;AAGA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,MAAM,GAAGL,MAAM,CAACM,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA1B;;AA+CA,SAASC,KAAT,CAAe;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAf,EAAgC;AAC5B;AACA,QAAM;AACFC,IAAAA,aADE;AAEFC,IAAAA,iBAFE;AAGFC,IAAAA,YAHE;AAIFC,IAAAA,IAJE;AAKFC,IAAAA;AALE,MAMFb,QAAQ,CAAC;AACTO,IAAAA,OADS;AAETC,IAAAA;AAFS,GAAD,CANZ,CAF4B,CAa5B;;AACA,SACI,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCE,YAAY,CAACG,GAAb,CAAiBC,WAAW,IACzB,4CAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,IAC3B,4CAAQA,MAAM,CAACC,cAAP,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAkCD,MAAM,CAACE,MAAP,CAAc,QAAd,CAAlC,CADH,CADL,CADH,CADD,CADJ,EAUI,+CAAWV,iBAAiB,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACCE,IAAI,CAACE,GAAL,CAAS,CAACO,GAAD,EAAMC,CAAN,KAAY;AAClBT,IAAAA,UAAU,CAACQ,GAAD,CAAV;AACA,WACI,4CAAQA,GAAG,CAACE,WAAJ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACKF,GAAG,CAACG,KAAJ,CAAUV,GAAV,CAAcW,IAAI,IAAI;AACnB,aAAO,4CAAQA,IAAI,CAACC,YAAL,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA8BD,IAAI,CAACL,MAAL,CAAY,MAAZ,CAA9B,CAAP;AACH,KAFA,CADL,CADJ;AAOH,GATA,CADD,CAVJ,CADJ;AAyBH;;AAED,IAAIO,gBAAgB,GAAG;AACnBC,EAAAA,MAAM,EAAE,MADW;AAEnBC,EAAAA,KAAK,EAAE,OAFY;AAGnBC,EAAAA,KAAK,EAAE,KAHY;AAInBC,EAAAA,UAAU,EAAE,QAJO;AAKnBC,EAAAA,QAAQ,EAAE,MALS;AAMnBC,EAAAA,UAAU,EAAE;AANO,CAAvB;;AASA,SAASC,GAAT,GAAe;AACX,QAAM3B,OAAO,GAAG,CACZ;AACI4B,IAAAA,MAAM,EAAE,EADZ;AAEIC,IAAAA,QAAQ,EAAE,cAFd;AAGIC,IAAAA,IAAI,EAAE,CAAC;AAAChB,MAAAA;AAAD,KAAD,KAAW;AACb,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAiC,QAAA,KAAK,EAAE;AAACO,UAAAA,MAAM,EAAE;AAAT,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0D,oBAAC,cAAD;AAAgB,QAAA,MAAM,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,MAAnB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoD,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAEP,GAAG,CAACiB,QAAJ,CAAaC,aAA3B;AAA0C,QAAA,IAAI,EAAC,IAA/C;AAAoD,QAAA,KAAK,EAAE,IAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApD,CAA1D,CADJ,CADJ;AAKH;AATL,GADY,EAYZ;AACI;;;AAGAJ,IAAAA,MAAM,EAAE,WAJZ;AAKIC,IAAAA,QAAQ,EAAE,eALd;AAMIC,IAAAA,IAAI,EAAE,CAAC;AAAChB,MAAAA;AAAD,KAAD,KAAW;AACb,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAiC,QAAA,KAAK,EAAE;AAACO,UAAAA,MAAM,EAAE;AAAT,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2DP,GAAG,CAACiB,QAAJ,CAAaC,aAAxE,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAM,QAAA,SAAS,EAAC,uBAAhB;AACM,QAAA,KAAK,EAAE;AAACT,UAAAA,KAAK,EAAE;AAAR,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACkCT,GAAG,CAACiB,QAAJ,CAAaE,cAD/C,CAHJ,CADJ;AAQH;AAfL,GAZY,EA6BZ;AACIL,IAAAA,MAAM,EAAE,cADZ;AAEIM,IAAAA,EAAE,EAAE,aAFR;AAGIL,IAAAA,QAAQ,EAAE,aAHd;AAIIM,IAAAA,cAAc,EAAE,IAJpB;AAKIL,IAAAA,IAAI,EAAE,CAAC;AAAChB,MAAAA;AAAD,KAAD,KAAW;AAAG,MAAA,IAAI,EAAEA,GAAG,CAACiB,QAAJ,CAAaK,WAAtB;AAAmC,MAAA,OAAO,EAAE,MAAM,CAClE,CADgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACbtB,GAAG,CAACiB,QAAJ,CAAaK,WADA;AALrB,GA7BY,EAsCZ;AACIR,IAAAA,MAAM,EAAE,cADZ;AAEIC,IAAAA,QAAQ,EAAE,cAFd;AAGIC,IAAAA,IAAI,EAAE,CAAC;AAAChB,MAAAA;AAAD,KAAD,KAAW;AACb,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAiC,QAAA,KAAK,EAAE;AAACO,UAAAA,MAAM,EAAE;AAAT,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2DP,GAAG,CAACiB,QAAJ,CAAaM,YAAxE,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAM,QAAA,SAAS,EAAC,uBAAhB;AACM,QAAA,KAAK,EAAE;AAACd,UAAAA,KAAK,EAAE;AAAR,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACkCT,GAAG,CAACiB,QAAJ,CAAaM,YAD/C,CAHJ,CADJ;AAQH;AAZL,GAtCY,EAoDZ;AACIT,IAAAA,MAAM,EAAE,YADZ;AAEIC,IAAAA,QAAQ,EAAE,YAFd;AAGIC,IAAAA,IAAI,EAAE,CAAC;AAAChB,MAAAA;AAAD,KAAD,KAAW;AACb,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAiC,QAAA,KAAK,EAAE;AAACO,UAAAA,MAAM,EAAE;AAAT,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2DP,GAAG,CAACiB,QAAJ,CAAaO,UAAxE,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAM,QAAA,SAAS,EAAC,uBAAhB;AACM,QAAA,KAAK,EAAE;AAACf,UAAAA,KAAK,EAAE;AAAR,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACkCT,GAAG,CAACiB,QAAJ,CAAaQ,YAD/C,CAHJ,CADJ;AAQH;AAZL,GApDY,EAkEZ;AACIX,IAAAA,MAAM,EAAE,cADZ;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GAlEY,EAsEZ;AACID,IAAAA,MAAM,EAAE,aADZ;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GAtEY,EA0EZ;AACID,IAAAA,MAAM,EAAE,eADZ;AAEIC,IAAAA,QAAQ,EAAE,cAFd;AAGIC,IAAAA,IAAI,EAAE,CAAC;AAAChB,MAAAA;AAAD,KAAD,KAAW;AACb,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAiC,QAAA,KAAK,EAAE;AAACO,UAAAA,MAAM,EAAE;AAAT,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2DP,GAAG,CAACiB,QAAJ,CAAaS,YAAxE,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAM,QAAA,SAAS,EAAC,uBAAhB;AACM,QAAA,KAAK,EAAE;AAACjB,UAAAA,KAAK,EAAE;AAAR,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACkCT,GAAG,CAACiB,QAAJ,CAAaU,gBAD/C,CAHJ,CADJ;AAQH;AAZL,GA1EY,CAAhB;AA0FA;;AACA,QAAMxC,IAAI,GAAG,CAAC;AACV+B,IAAAA,aAAa,EAAG,gBADN;AAEVC,IAAAA,cAAc,EAAG,sBAFP;AAGVG,IAAAA,WAAW,EAAG,SAHJ;AAIVC,IAAAA,YAAY,EAAE,kBAJJ;AAKVK,IAAAA,cAAc,EAAE,MALN;AAMVJ,IAAAA,UAAU,EAAE,sBANF;AAOVC,IAAAA,YAAY,EAAE,QAPJ;AAQVI,IAAAA,WAAW,EAAG,YARJ;AASVC,IAAAA,UAAU,EAAE,QATF;AAUVJ,IAAAA,YAAY,EAAG,wBAVL;AAWVC,IAAAA,gBAAgB,EAAG,YAXT;AAYVI,IAAAA,YAAY,EAAG;AAZL,GAAD,EAeT;AACIb,IAAAA,aAAa,EAAG,aADpB;AAEIC,IAAAA,cAAc,EAAG,uBAFrB;AAGIG,IAAAA,WAAW,EAAG,SAHlB;AAIIC,IAAAA,YAAY,EAAE,WAJlB;AAKIK,IAAAA,cAAc,EAAE,MALpB;AAMIJ,IAAAA,UAAU,EAAE,cANhB;AAOIC,IAAAA,YAAY,EAAE,QAPlB;AAQII,IAAAA,WAAW,EAAG,aARlB;AASIC,IAAAA,UAAU,EAAE,SAThB;AAUIJ,IAAAA,YAAY,EAAG,wBAVnB;AAWIC,IAAAA,gBAAgB,EAAG;AAXvB,GAfS,EA6BT;AACIT,IAAAA,aAAa,EAAG,aADpB;AAEIC,IAAAA,cAAc,EAAG,sBAFrB;AAGIG,IAAAA,WAAW,EAAG,SAHlB;AAIIC,IAAAA,YAAY,EAAE,kBAJlB;AAKIK,IAAAA,cAAc,EAAE,MALpB;AAMIJ,IAAAA,UAAU,EAAE,sBANhB;AAOIC,IAAAA,YAAY,EAAE,QAPlB;AAQII,IAAAA,WAAW,EAAG,YARlB;AASIC,IAAAA,UAAU,EAAE,QAThB;AAUIJ,IAAAA,YAAY,EAAG,wBAVnB;AAWIC,IAAAA,gBAAgB,EAAG;AAXvB,GA7BS,EA2CT;AACIT,IAAAA,aAAa,EAAG,gBADpB;AAEIC,IAAAA,cAAc,EAAG,sBAFrB;AAGIG,IAAAA,WAAW,EAAG,SAHlB;AAIIC,IAAAA,YAAY,EAAE,kBAJlB;AAKIK,IAAAA,cAAc,EAAE,MALpB;AAMIJ,IAAAA,UAAU,EAAE,sBANhB;AAOIC,IAAAA,YAAY,EAAE,QAPlB;AAQII,IAAAA,WAAW,EAAG,YARlB;AASIC,IAAAA,UAAU,EAAE,QAThB;AAUIJ,IAAAA,YAAY,EAAG,wBAVnB;AAWIC,IAAAA,gBAAgB,EAAG;AAXvB,GA3CS,EAyDT;AACIT,IAAAA,aAAa,EAAG,aADpB;AAEIC,IAAAA,cAAc,EAAG,uBAFrB;AAGIG,IAAAA,WAAW,EAAG,SAHlB;AAIIC,IAAAA,YAAY,EAAE,WAJlB;AAKIK,IAAAA,cAAc,EAAE,MALpB;AAMIJ,IAAAA,UAAU,EAAE,cANhB;AAOIC,IAAAA,YAAY,EAAE,QAPlB;AAQII,IAAAA,WAAW,EAAG,aARlB;AASIC,IAAAA,UAAU,EAAE,SAThB;AAUIJ,IAAAA,YAAY,EAAG,wBAVnB;AAWIC,IAAAA,gBAAgB,EAAG;AAXvB,GAzDS,EAsEP;AACET,IAAAA,aAAa,EAAG,gBADlB;AAEEC,IAAAA,cAAc,EAAG,sBAFnB;AAGEG,IAAAA,WAAW,EAAG,SAHhB;AAIEC,IAAAA,YAAY,EAAE,kBAJhB;AAKEK,IAAAA,cAAc,EAAE,MALlB;AAMEJ,IAAAA,UAAU,EAAE,sBANd;AAOEC,IAAAA,YAAY,EAAE,QAPhB;AAQEI,IAAAA,WAAW,EAAG,YARhB;AASEC,IAAAA,UAAU,EAAE,QATd;AAUEJ,IAAAA,YAAY,EAAG,wBAVjB;AAWEC,IAAAA,gBAAgB,EAAG;AAXrB,GAtEO,EAoFT;AACIT,IAAAA,aAAa,EAAG,aADpB;AAEIC,IAAAA,cAAc,EAAG,uBAFrB;AAGIG,IAAAA,WAAW,EAAG,SAHlB;AAIIC,IAAAA,YAAY,EAAE,WAJlB;AAKIK,IAAAA,cAAc,EAAE,MALpB;AAMIJ,IAAAA,UAAU,EAAE,cANhB;AAOIC,IAAAA,YAAY,EAAE,QAPlB;AAQII,IAAAA,WAAW,EAAG,aARlB;AASIC,IAAAA,UAAU,EAAE,SAThB;AAUIJ,IAAAA,YAAY,EAAG,wBAVnB;AAWIC,IAAAA,gBAAgB,EAAG;AAXvB,GApFS,EAiGP;AACET,IAAAA,aAAa,EAAG,gBADlB;AAEEC,IAAAA,cAAc,EAAG,sBAFnB;AAGEG,IAAAA,WAAW,EAAG,SAHhB;AAIEC,IAAAA,YAAY,EAAE,kBAJhB;AAKEK,IAAAA,cAAc,EAAE,MALlB;AAMEJ,IAAAA,UAAU,EAAE,sBANd;AAOEC,IAAAA,YAAY,EAAE,QAPhB;AAQEI,IAAAA,WAAW,EAAG,YARhB;AASEC,IAAAA,UAAU,EAAE,QATd;AAUEJ,IAAAA,YAAY,EAAG,wBAVjB;AAWEC,IAAAA,gBAAgB,EAAG;AAXrB,GAjGO,EA+GT;AACIT,IAAAA,aAAa,EAAG,aADpB;AAEIC,IAAAA,cAAc,EAAG,uBAFrB;AAGIG,IAAAA,WAAW,EAAG,SAHlB;AAIIC,IAAAA,YAAY,EAAE,WAJlB;AAKIK,IAAAA,cAAc,EAAE,MALpB;AAMIJ,IAAAA,UAAU,EAAE,cANhB;AAOIC,IAAAA,YAAY,EAAE,QAPlB;AAQII,IAAAA,WAAW,EAAG,aARlB;AASIC,IAAAA,UAAU,EAAE,SAThB;AAUIJ,IAAAA,YAAY,EAAG,wBAVnB;AAWIC,IAAAA,gBAAgB,EAAG;AAXvB,GA/GS,CAAb;AA8HA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEzC,OAAhB;AAAyB,IAAA,IAAI,EAAEC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH;;AAED,eAAe0B,GAAf;AAEA","sourcesContent":["/*\nimport React, { Component } from 'react';\nimport './App.css';\nimport HelloWorld from './components/HelloWorld';\n  import Select from './components/Select';\n\nclass App extends Component{\n \n  state = {\n\n    selected_value:\"text\",\n    select_id:\"\",\n    some_value:[\"date\",\"datetime\",\"email\"]\n\n    \n\n  }\n  \n  optionChangeHandler =(e)=>{\n    console.log(\"this is e\", e)\n    this.setState({\n\n      selected_value: e \n      \n\n    }\n  )\n  }\n\n  CallInterval =() =>{\n    console.log(\"intervall call\")\n  }\n\n\n render(){\n   console.log(\"final state\",this.state)\n  return (\n\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {  /!* <img src={logo} className=\"App-logo\" alt=\"logo\" />       *!/}\n         \n          <HelloWorld />\n\n          <Select select_id=\"type_of_input\" selected_value={this.state.selected_value} some_value={this.state.some_value} \n          changed={this.optionChangeHandler}\n\n          />\n           \n      </header>\n    </div>\n  );\n}\n}\nexport default App;\n*/\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport {useTable} from 'react-table'\nimport Avatar, { ConfigProvider } from 'react-avatar';\n\n\nimport makeData from './makeData'\n\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    \n\n\n    tr {\n    \n      height: 70px;\n  width: 1318px;\n      color: #4A4A4A;\n      font-family: Roboto;\n      font-size: 14px;\n      font-weight: 500;\n      line-height: 19px;\n      :first-child {\n     td{border-top: 2px solid rgba(143,143,143,0.2);}\n      \n      }\n      :last-child {\n      \n        td {\n        color: green;\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      \n      :first-child{ \n      font-weight: bold;      \n      border-left: 2px solid rgba(143,143,143,0.2);\n      };\n      :second-child{color: green};\n      :last-child {\n      border-right: 2px solid rgba(143,143,143,0.2);     \n      }\n    }\n  }\n`\n\nfunction Table({columns, data}) {\n    // Use the state and functions returned from useTable to build your UI\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = useTable({\n        columns,\n        data,\n    })\n\n    // Render the UI for your table\n    return (\n        <table {...getTableProps()}>\n            <thead>\n            {headerGroups.map(headerGroup => (\n                <tr {...headerGroup.getHeaderGroupProps()}>\n                    {headerGroup.headers.map(column => (\n                        <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                    ))}\n                </tr>\n            ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n            {rows.map((row, i) => {\n                prepareRow(row)\n                return (\n                    <tr {...row.getRowProps()}>\n                        {row.cells.map(cell => {\n                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                        })}\n                    </tr>\n                )\n            })}\n            </tbody>\n        </table>\n    )\n}\n\nlet mainContentStyle = {\n    height: \"16px\",\n    width: \"144px\",\n    color: \"red\",\n    fontFamily: \"Roboto\",\n    fontSize: \"14px\",\n    lineHeight: \"19px\"\n}\n\nfunction App() {\n    const columns = [\n        {\n            Header: '',\n            accessor: 'profileImage',\n            Cell: ({row}) => {\n                return (\n                    <div>\n                        <span className=\"class-for-name\" style={{height: \"16px\"}}><ConfigProvider colors={['black', 'green', 'blue']}><Avatar name={row.original.candidateName} size=\"30\" round={true}/></ConfigProvider></span>\n                    </div>\n                )\n            }\n        },\n        {\n            /*Header: ' ',\n            columns: [\n                {*/\n            Header: 'Candidate',\n            accessor: 'candidateName',\n            Cell: ({row}) => {\n                return (\n                    <div>\n                        <span className=\"class-for-name\" style={{height: \"16px\"}}>{row.original.candidateName}</span>\n                        <br></br>\n                        <span className=\"class-for-description\"\n                              style={{color: \"#909090\"}}>{row.original.candidateEmail}</span>\n                    </div>\n                )\n            }\n        },\n        {\n            Header: 'Candidate ID',\n            id: \"candidateId\",\n            accessor: \"candidateId\",\n            ignoreRowClick: true,\n            Cell: ({row}) => <a href={row.original.candidateId} onClick={() => {\n            }}>{row.original.candidateId}</a>,\n\n        },\n        {\n            Header: 'Organization',\n            accessor: 'organization',\n            Cell: ({row}) => {\n                return (\n                    <div>\n                        <span className=\"class-for-name\" style={{height: \"16px\"}}>{row.original.organization}</span>\n                        <br></br>\n                        <span className=\"class-for-description\"\n                              style={{color: \"#909090\"}}>{row.original.organization}</span>\n                    </div>\n                )\n            }\n        },\n        {\n            Header: 'Assessment',\n            accessor: 'assessment',\n            Cell: ({row}) => {\n                return (\n                    <div>\n                        <span className=\"class-for-name\" style={{height: \"16px\"}}>{row.original.assessment}</span>\n                        <br></br>\n                        <span className=\"class-for-description\"\n                              style={{color: \"#909090\"}}>{row.original.assessmentId}</span>\n                    </div>\n                )\n            }\n        },\n        {\n            Header: 'Created Date',\n            accessor: 'createdDate',\n        },\n        {\n            Header: 'External ID',\n            accessor: 'externalId',\n        },\n        {\n            Header: 'Last Activity',\n            accessor: 'lastActivity',\n            Cell: ({row}) => {\n                return (\n                    <div>\n                        <span className=\"class-for-name\" style={{height: \"16px\"}}>{row.original.lastActivity}</span>\n                        <br></br>\n                        <span className=\"class-for-description\"\n                              style={{color: \"#909090\"}}>{row.original.lastActivityDate}</span>\n                    </div>\n                )\n            }\n        },\n    ]\n\n    /*const data = React.useMemo(() => makeData(20), [])*/\n    const data = [{\n        candidateName : \"Lillian Bennet\",\n        candidateEmail : \"lillianben@yahoo.com\",\n        candidateId : \"#782475\",\n        organization: \"HCL Technologies\",\n        organizationId: \"#245\" ,\n        assessment: \"Javascript Developer\",\n        assessmentId: \"#23554\",\n        createdDate : \"5 days ago\",\n        externalId: \"H28477\",\n        lastActivity : \"Invited for Assessment\",\n        lastActivityDate : \"2 days ago\",\n        profileImage : \"hello\"\n\n    },\n        {\n            candidateName : \"Nathan Reed\",\n            candidateEmail : \"nathan.reed@yahoo.com\",\n            candidateId : \"#647634\",\n            organization: \"Cognizant\",\n            organizationId: \"#333\" ,\n            assessment: \"Asynchronous\",\n            assessmentId: \"#87587\",\n            createdDate : \"12 days ago\",\n            externalId: \"C112322\",\n            lastActivity : \"Invited for Assessment\",\n            lastActivityDate : \"5 days ago\"\n\n        },\n        {\n            candidateName : \"Wasim Ekram\",\n            candidateEmail : \"lillianben@yahoo.com\",\n            candidateId : \"#782475\",\n            organization: \"HCL Technologies\",\n            organizationId: \"#245\" ,\n            assessment: \"Javascript Developer\",\n            assessmentId: \"#23554\",\n            createdDate : \"5 days ago\",\n            externalId: \"H28477\",\n            lastActivity : \"Invited for Assessment\",\n            lastActivityDate : \"2 days ago\"\n\n        },\n        {\n            candidateName : \"Shresht Juneja\",\n            candidateEmail : \"lillianben@yahoo.com\",\n            candidateId : \"#782475\",\n            organization: \"HCL Technologies\",\n            organizationId: \"#245\" ,\n            assessment: \"Javascript Developer\",\n            assessmentId: \"#23554\",\n            createdDate : \"5 days ago\",\n            externalId: \"H28477\",\n            lastActivity : \"Invited for Assessment\",\n            lastActivityDate : \"2 days ago\"\n\n        },\n        {\n            candidateName : \"Nathan Reed\",\n            candidateEmail : \"nathan.reed@yahoo.com\",\n            candidateId : \"#647634\",\n            organization: \"Cognizant\",\n            organizationId: \"#333\" ,\n            assessment: \"Asynchronous\",\n            assessmentId: \"#87587\",\n            createdDate : \"12 days ago\",\n            externalId: \"C112322\",\n            lastActivity : \"Invited for Assessment\",\n            lastActivityDate : \"5 days ago\"\n\n        },{\n            candidateName : \"Lillian Bennet\",\n            candidateEmail : \"lillianben@yahoo.com\",\n            candidateId : \"#782475\",\n            organization: \"HCL Technologies\",\n            organizationId: \"#245\" ,\n            assessment: \"Javascript Developer\",\n            assessmentId: \"#23554\",\n            createdDate : \"5 days ago\",\n            externalId: \"H28477\",\n            lastActivity : \"Invited for Assessment\",\n            lastActivityDate : \"2 days ago\"\n\n        },\n        {\n            candidateName : \"Nathan Reed\",\n            candidateEmail : \"nathan.reed@yahoo.com\",\n            candidateId : \"#647634\",\n            organization: \"Cognizant\",\n            organizationId: \"#333\" ,\n            assessment: \"Asynchronous\",\n            assessmentId: \"#87587\",\n            createdDate : \"12 days ago\",\n            externalId: \"C112322\",\n            lastActivity : \"Invited for Assessment\",\n            lastActivityDate : \"5 days ago\"\n\n        },{\n            candidateName : \"Lillian Bennet\",\n            candidateEmail : \"lillianben@yahoo.com\",\n            candidateId : \"#782475\",\n            organization: \"HCL Technologies\",\n            organizationId: \"#245\" ,\n            assessment: \"Javascript Developer\",\n            assessmentId: \"#23554\",\n            createdDate : \"5 days ago\",\n            externalId: \"H28477\",\n            lastActivity : \"Invited for Assessment\",\n            lastActivityDate : \"2 days ago\"\n\n        },\n        {\n            candidateName : \"Nathan Reed\",\n            candidateEmail : \"nathan.reed@yahoo.com\",\n            candidateId : \"#647634\",\n            organization: \"Cognizant\",\n            organizationId: \"#333\" ,\n            assessment: \"Asynchronous\",\n            assessmentId: \"#87587\",\n            createdDate : \"12 days ago\",\n            externalId: \"C112322\",\n            lastActivity : \"Invited for Assessment\",\n            lastActivityDate : \"5 days ago\"\n\n        }]\n\n    return (\n        <Styles>\n            <Table columns={columns} data={data}/>\n        </Styles>\n    )\n}\n\nexport default App\n\n/*\nimport React from 'react'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport EnhancedTable from './components/EnhancedTable'\nimport makeData from './makeData'\n\nconst App = () => {\n    const columns = React.useMemo(\n        () => [\n            /!*{\n                Header: 'First Name',\n                accessor: 'firstName',\n            },\n            {\n                Header: 'Last Name',\n                accessor: 'lastName',\n            },\n            {\n                Header: 'Age',\n                accessor: 'age',\n            },\n            {\n                Header: 'Visits',\n                accessor: 'visits',\n            },\n            {\n                Header: 'Status',\n                accessor: 'status',\n            },\n            {\n                Header: 'Profile Progress',\n                accessor: 'progress',\n            },*!/\n            {\n                Header: 'Candidate',\n                accessor: 'candidateName',\n            },\n            {\n                Header: 'Candidate ID',\n                accessor: 'candidateId',\n            },\n            {\n                Header: 'Organization',\n                accessor: 'organization',\n            },\n            {\n                Header: 'Assessment',\n                accessor: 'assessment',\n            },\n            {\n                Header: 'Created Date',\n                accessor: 'createdDate',\n            },\n            {\n                Header: 'External ID',\n                accessor: 'externalId',\n            },\n            {\n                Header: 'Last Activity',\n                accessor: 'lastActivity',\n            },\n        ],\n        []\n    )\n\n    const [data, setData] = React.useState(React.useMemo(() => makeData(40), []))\n    const [skipPageReset, setSkipPageReset] = React.useState(false)\n\n    // We need to keep the table from resetting the pageIndex when we\n    // Update data. So we can keep track of that flag with a ref.\n\n    // When our cell renderer calls updateMyData, we'll use\n    // the rowIndex, columnId and new value to update the\n    // original data\n    const updateMyData = (rowIndex, columnId, value) => {\n        // We also turn on the flag to not reset the page\n        setSkipPageReset(true)\n        setData(old =>\n            old.map((row, index) => {\n                if (index === rowIndex) {\n                    return {\n                        ...old[rowIndex],\n                        [columnId]: value,\n                    }\n                }\n                return row\n            })\n        )\n    }\n\n    return (\n        <div>\n            {/!*<CssBaseline />*!/}\n            <EnhancedTable\n                columns={columns}\n                data={data}\n                setData={setData}\n                updateMyData={updateMyData}\n                skipPageReset={skipPageReset}\n            />\n        </div>\n    )\n}\n\nexport default App\n\n*/\n"]},"metadata":{},"sourceType":"module"}