{"ast":null,"code":"var _jsxFileName = \"/home/user/Downloads/BasicReact/basicreact/src/components/GlobalFilter.js\";\nimport React from 'react';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport SearchIcon from '@material-ui/icons/Search';\nconst useStyles = makeStyles(theme => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200\n    }\n  }\n}));\n\nconst GlobalFilter = ({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter\n}) => {\n  const classes = useStyles();\n  const count = preGlobalFilteredRows.length; // Global filter only works with pagination from the first page.\n  // This may not be a problem for server side pagination when\n  // only the current page is downloaded.\n\n  return React.createElement(\"div\", {\n    className: classes.search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.searchIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(SearchIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(InputBase, {\n    value: globalFilter || '',\n    onChange: e => {\n      setGlobalFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n    },\n    placeholder: `${count} records...`,\n    classes: {\n      root: classes.inputRoot,\n      input: classes.inputInput\n    },\n    inputProps: {\n      'aria-label': 'search'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }));\n};\n\nGlobalFilter.propTypes = {\n  preGlobalFilteredRows: PropTypes.array.isRequired,\n  globalFilter: PropTypes.string.isRequired,\n  setGlobalFilter: PropTypes.func.isRequired\n};\nexport default GlobalFilter;","map":{"version":3,"sources":["/home/user/Downloads/BasicReact/basicreact/src/components/GlobalFilter.js"],"names":["React","InputBase","fade","makeStyles","PropTypes","SearchIcon","useStyles","theme","search","position","borderRadius","shape","backgroundColor","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","searchIcon","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","classes","count","length","e","target","value","undefined","root","input","propTypes","array","isRequired","string","func"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport InputBase from '@material-ui/core/InputBase'\nimport { fade, makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst useStyles = makeStyles(theme => ({\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        width: theme.spacing(7),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 7),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: 200,\n        },\n    },\n}))\n\nconst GlobalFilter = ({\n                          preGlobalFilteredRows,\n                          globalFilter,\n                          setGlobalFilter,\n                      }) => {\n    const classes = useStyles()\n    const count = preGlobalFilteredRows.length\n\n    // Global filter only works with pagination from the first page.\n    // This may not be a problem for server side pagination when\n    // only the current page is downloaded.\n\n    return (\n        <div className={classes.search}>\n            <div className={classes.searchIcon}>\n                <SearchIcon />\n            </div>\n            <InputBase\n                value={globalFilter || ''}\n                onChange={e => {\n                    setGlobalFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\n                }}\n                placeholder={`${count} records...`}\n                classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n            />\n        </div>\n    )\n}\n\nGlobalFilter.propTypes = {\n    preGlobalFilteredRows: PropTypes.array.isRequired,\n    globalFilter: PropTypes.string.isRequired,\n    setGlobalFilter: PropTypes.func.isRequired,\n}\n\nexport default GlobalFilter\n"]},"metadata":{},"sourceType":"module"}