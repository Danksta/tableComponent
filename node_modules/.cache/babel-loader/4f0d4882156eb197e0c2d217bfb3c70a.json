{"ast":null,"code":"var _jsxFileName = \"/home/user/Downloads/BasicReact/basicreact/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n/*\nimport React, { forwardRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { FixedSizeGrid as Grid } from \"react-window\";\n\n/!*import \"./styles.css\";*!/\n\nconst GUTTER_SIZE = 5;\nconst COLUMN_WIDTH = 100;\nconst ROW_HEIGHT = 35;\n\nconst Cell = ({ columnIndex, rowIndex, style }) => (\n    <div\n        className={\"GridItem\"}\n        style={{\n            ...style,\n            left: style.left + GUTTER_SIZE,\n            top: style.top + GUTTER_SIZE,\n            width: style.width - GUTTER_SIZE,\n            height: style.height - GUTTER_SIZE\n        }}\n    >\n        r{rowIndex}, c{columnIndex}\n    </div>\n);\n\nconst Example = () => (\n    <Grid\n        className=\"Grid\"\n        columnCount={50}\n        columnWidth={COLUMN_WIDTH + GUTTER_SIZE}\n        height={150}\n        innerElementType={innerElementType}\n        rowCount={100}\n        rowHeight={ROW_HEIGHT + GUTTER_SIZE}\n        width={300}\n    >\n        {Cell}\n    </Grid>\n);\n\nconst innerElementType = forwardRef(({ style, ...rest }, ref) => (\n    <div\n        ref={ref}\n        style={{\n            ...style,\n            paddingLeft: GUTTER_SIZE,\n            paddingTop: GUTTER_SIZE\n        }}\n        {...rest}\n    />\n));\n\nReactDOM.render(<Example />, document.getElementById(\"root\"));\n*/","map":{"version":3,"sources":["/home/user/Downloads/BasicReact/basicreact/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEAF,QAAQ,CAACG,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA;;AACAH,aAAa,CAACI,UAAd;AAEA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n/*\nimport React, { forwardRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { FixedSizeGrid as Grid } from \"react-window\";\n\n/!*import \"./styles.css\";*!/\n\nconst GUTTER_SIZE = 5;\nconst COLUMN_WIDTH = 100;\nconst ROW_HEIGHT = 35;\n\nconst Cell = ({ columnIndex, rowIndex, style }) => (\n    <div\n        className={\"GridItem\"}\n        style={{\n            ...style,\n            left: style.left + GUTTER_SIZE,\n            top: style.top + GUTTER_SIZE,\n            width: style.width - GUTTER_SIZE,\n            height: style.height - GUTTER_SIZE\n        }}\n    >\n        r{rowIndex}, c{columnIndex}\n    </div>\n);\n\nconst Example = () => (\n    <Grid\n        className=\"Grid\"\n        columnCount={50}\n        columnWidth={COLUMN_WIDTH + GUTTER_SIZE}\n        height={150}\n        innerElementType={innerElementType}\n        rowCount={100}\n        rowHeight={ROW_HEIGHT + GUTTER_SIZE}\n        width={300}\n    >\n        {Cell}\n    </Grid>\n);\n\nconst innerElementType = forwardRef(({ style, ...rest }, ref) => (\n    <div\n        ref={ref}\n        style={{\n            ...style,\n            paddingLeft: GUTTER_SIZE,\n            paddingTop: GUTTER_SIZE\n        }}\n        {...rest}\n    />\n));\n\nReactDOM.render(<Example />, document.getElementById(\"root\"));\n*/\n"]},"metadata":{},"sourceType":"module"}