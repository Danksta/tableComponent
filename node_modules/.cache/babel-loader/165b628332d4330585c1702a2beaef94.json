{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _utils = require(\"@material-ui/utils\");\n\nvar _SwitchBase = _interopRequireDefault(require(\"../internal/SwitchBase\"));\n\nvar _CheckBoxOutlineBlank = _interopRequireDefault(require(\"../internal/svg-icons/CheckBoxOutlineBlank\"));\n\nvar _CheckBox = _interopRequireDefault(require(\"../internal/svg-icons/CheckBox\"));\n\nvar _colorManipulator = require(\"../styles/colorManipulator\");\n\nvar _IndeterminateCheckBox = _interopRequireDefault(require(\"../internal/svg-icons/IndeterminateCheckBox\"));\n\nvar _capitalize = _interopRequireDefault(require(\"../utils/capitalize\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: (0, _colorManipulator.fade)(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: (0, _colorManipulator.fade)(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\n\nexports.styles = styles;\nvar defaultCheckedIcon = React.createElement(_CheckBox.default, null);\nvar defaultIcon = React.createElement(_CheckBoxOutlineBlank.default, null);\nvar defaultIndeterminateIcon = React.createElement(_IndeterminateCheckBox.default, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = (0, _objectWithoutProperties2.default)(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n  return React.createElement(_SwitchBase.default, (0, _extends2.default)({\n    type: \"checkbox\",\n    classes: {\n      root: (0, _clsx.default)(classes.root, classes[\"color\".concat((0, _capitalize.default)(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: (0, _extends2.default)({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: _propTypes.default.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: _propTypes.default.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: _propTypes.default.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: _propTypes.default.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: _propTypes.default.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: _propTypes.default.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: _propTypes.default.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: _propTypes.default.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: _propTypes.default.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: _utils.refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: _propTypes.default.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: _propTypes.default.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: _propTypes.default.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: _propTypes.default.any\n} : void 0;\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);\n\nexports.default = _default;","map":{"version":3,"sources":["/home/user/Downloads/BasicReact/basicreact/node_modules/@material-ui/core/Checkbox/Checkbox.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","default","styles","_extends2","_objectWithoutProperties2","React","_propTypes","_clsx","_utils","_SwitchBase","_CheckBoxOutlineBlank","_CheckBox","_colorManipulator","_IndeterminateCheckBox","_capitalize","_withStyles","theme","root","color","palette","text","secondary","checked","disabled","indeterminate","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","defaultCheckedIcon","createElement","defaultIcon","defaultIndeterminateIcon","Checkbox","forwardRef","props","ref","_props$checkedIcon","checkedIcon","classes","_props$color","_props$icon","icon","_props$indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","_props$size","size","other","type","concat","cloneElement","fontSize","process","env","NODE_ENV","propTypes","bool","node","object","isRequired","oneOf","disableRipple","id","string","inputRef","refType","onChange","func","required","any","_default","name"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _utils = require(\"@material-ui/utils\");\n\nvar _SwitchBase = _interopRequireDefault(require(\"../internal/SwitchBase\"));\n\nvar _CheckBoxOutlineBlank = _interopRequireDefault(require(\"../internal/svg-icons/CheckBoxOutlineBlank\"));\n\nvar _CheckBox = _interopRequireDefault(require(\"../internal/svg-icons/CheckBox\"));\n\nvar _colorManipulator = require(\"../styles/colorManipulator\");\n\nvar _IndeterminateCheckBox = _interopRequireDefault(require(\"../internal/svg-icons/IndeterminateCheckBox\"));\n\nvar _capitalize = _interopRequireDefault(require(\"../utils/capitalize\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: (0, _colorManipulator.fade)(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: (0, _colorManipulator.fade)(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\n\nexports.styles = styles;\nvar defaultCheckedIcon = React.createElement(_CheckBox.default, null);\nvar defaultIcon = React.createElement(_CheckBoxOutlineBlank.default, null);\nvar defaultIndeterminateIcon = React.createElement(_IndeterminateCheckBox.default, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = (0, _objectWithoutProperties2.default)(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n  return React.createElement(_SwitchBase.default, (0, _extends2.default)({\n    type: \"checkbox\",\n    classes: {\n      root: (0, _clsx.default)(classes.root, classes[\"color\".concat((0, _capitalize.default)(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: (0, _extends2.default)({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: _propTypes.default.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: _propTypes.default.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: _propTypes.default.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: _propTypes.default.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: _propTypes.default.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: _propTypes.default.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: _propTypes.default.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: _propTypes.default.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: _propTypes.default.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: _utils.refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: _propTypes.default.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: _propTypes.default.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: _propTypes.default.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: _propTypes.default.any\n} : void 0;\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}