{"ast":null,"code":"var _jsxFileName = \"/home/user/Downloads/BasicReact/basicreact/src/App.js\";\n\n/*\nimport React, { Component } from 'react';\nimport './App.css';\nimport HelloWorld from './components/HelloWorld';\n  import Select from './components/Select';\n\nclass App extends Component{\n \n  state = {\n\n    selected_value:\"text\",\n    select_id:\"\",\n    some_value:[\"date\",\"datetime\",\"email\"]\n\n    \n\n  }\n  \n  optionChangeHandler =(e)=>{\n    console.log(\"this is e\", e)\n    this.setState({\n\n      selected_value: e \n      \n\n    }\n  )\n  }\n\n  CallInterval =() =>{\n    console.log(\"intervall call\")\n  }\n\n\n render(){\n   console.log(\"final state\",this.state)\n  return (\n\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {  /!* <img src={logo} className=\"App-logo\" alt=\"logo\" />       *!/}\n         \n          <HelloWorld />\n\n          <Select select_id=\"type_of_input\" selected_value={this.state.selected_value} some_value={this.state.some_value} \n          changed={this.optionChangeHandler}\n\n          />\n           \n      </header>\n    </div>\n  );\n}\n}\nexport default App;\n*/\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useExpanded, useFilters, useGroupBy, usePagination, useSortBy, useTable, pageSizeOptions } from 'react-table';\nimport { Avatar, ConfigProvider } from \"react-avatar\";\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    \n\n\n    tr {\n    \n      height: 70px;\n  width: 1318px;\n      color: #4A4A4A;\n      font-family: Roboto;\n      font-size: 14px;\n      font-weight: 500;\n      line-height: 19px;\n      :first-child {\n     td{border-top: 2px solid rgba(143,143,143,0.2);}\n      \n      }\n      :last-child {\n      \n        td {\n        color: green;\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      \n      :first-child{ \n      font-weight: bold;      \n      border-left: 2px solid rgba(143,143,143,0.2);\n      };\n      :second-child{color: green};\n      :last-child {\n      border-right: 2px solid rgba(143,143,143,0.2);     \n      }\n    }\n  }\n`;\n\nfunction MyTable(props) {\n  // Use the useTable hook to create your table configuration\n  const instance = useTable(props, useGroupBy, useFilters, useSortBy, useExpanded, usePagination);\n\n  function Table({\n    columns,\n    data\n  }) {\n    // Use the state and functions returned from useTable to build your UI\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow,\n      pageOptions,\n      page,\n      state: {\n        pageIndex,\n        pageSize\n      },\n      gotoPage,\n      previousPage,\n      nextPage,\n      setPageSize,\n      canPreviousPage,\n      canNextPage,\n      pageSizeOptions\n    } = useTable({\n      columns,\n      data\n    }); // Render the UI for your table\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"table\", Object.assign({}, getTableProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, headerGroups.map(headerGroup => React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), headerGroup.headers.map(column => React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), column.render('Header')))))), React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), rows.map((row, i) => {\n      prepareRow(row);\n      return React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), row.cells.map(cell => {\n        return React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }), cell.render('Cell'));\n      }));\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => previousPage(),\n      disabled: !canPreviousPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Previous Page\"), React.createElement(\"button\", {\n      onClick: () => nextPage(),\n      disabled: !canNextPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Next Page\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Page\", ' ', React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, pageIndex + 1, \" of \", pageOptions.length)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Go to page:\"), React.createElement(\"input\", {\n      type: \"number\",\n      defaultValue: pageIndex + 1 || 1,\n      onChange: e => {\n        const page = e.target.value ? Number(e.target.value) - 1 : 0;\n        gotoPage(page);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      value: pageSize,\n      onChange: e => {\n        setPageSize(Number(e.target.value));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, pageSizeOptions.map(pageSize => React.createElement(\"option\", {\n      key: pageSize,\n      value: pageSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Show \", pageSize)))));\n  }\n\n  let mainContentStyle = {\n    height: \"16px\",\n    width: \"144px\",\n    color: \"red\",\n    fontFamily: \"Roboto\",\n    fontSize: \"14px\",\n    lineHeight: \"19px\"\n  };\n  let colors = ['black', 'green', 'blue'];\n\n  function App() {\n    const columns = [{\n      Header: '',\n      accessor: 'profileImage',\n      Cell: ({\n        row\n      }) => {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"class-for-name\",\n          style: {\n            height: \"16px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, React.createElement(ConfigProvider, {\n          colors: colors,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          name: row.original.candidateName,\n          size: \"30\",\n          round: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }))));\n      }\n    }, {\n      /*Header: ' ',\n      columns: [\n          {*/\n      Header: 'Candidate',\n      accessor: 'candidateName',\n      Cell: ({\n        row\n      }) => {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"class-for-name\",\n          style: {\n            height: \"16px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }, row.original.candidateName), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"class-for-description\",\n          style: {\n            color: \"#909090\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }, row.original.candidateEmail));\n      }\n    }, {\n      Header: 'Candidate ID',\n      id: \"candidateId\",\n      accessor: \"candidateId\",\n      ignoreRowClick: true,\n      Cell: ({\n        row\n      }) => React.createElement(\"a\", {\n        href: row.original.candidateId,\n        onClick: () => {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, row.original.candidateId)\n    }, {\n      Header: 'Organization',\n      accessor: 'organization',\n      Cell: ({\n        row\n      }) => {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          onMouseOver: () => {\n            console.log(\"henlo\");\n          },\n          className: \"class-for-name\",\n          style: {\n            height: \"16px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, row.original.organization), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"class-for-description\",\n          style: {\n            color: \"#909090\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        }, row.original.organization));\n      }\n    }, {\n      Header: 'Assessment',\n      accessor: 'assessment',\n      Cell: ({\n        row\n      }) => {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"class-for-name\",\n          style: {\n            height: \"16px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }, row.original.assessment), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"class-for-description\",\n          style: {\n            color: \"#909090\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        }, row.original.assessmentId));\n      }\n    }, {\n      Header: 'Created Date',\n      accessor: 'createdDate'\n    }, {\n      Header: 'External ID',\n      accessor: 'externalId'\n    }, {\n      Header: 'Last Activity',\n      accessor: 'lastActivity',\n      Cell: ({\n        row\n      }) => {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"class-for-name\",\n          style: {\n            height: \"16px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314\n          },\n          __self: this\n        }, row.original.lastActivity), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"class-for-description\",\n          style: {\n            color: \"#909090\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        }, row.original.lastActivityDate));\n      }\n    }];\n    /*const data = React.useMemo(() => makeData(20), [])*/\n\n    const data = [{\n      candidateName: \"Lillian Bennet\",\n      candidateEmail: \"lillianben@yahoo.com\",\n      candidateId: \"#782475\",\n      organization: \"HCL Technologies\",\n      organizationId: \"#245\",\n      assessment: \"Javascript Developer\",\n      assessmentId: \"#23554\",\n      createdDate: \"5 days ago\",\n      externalId: \"H28477\",\n      lastActivity: \"Invited for Assessment\",\n      lastActivityDate: \"2 days ago\",\n      profileImage: \"hello\"\n    }, {\n      candidateName: \"Nathan Reed\",\n      candidateEmail: \"nathan.reed@yahoo.com\",\n      candidateId: \"#647634\",\n      organization: \"Cognizant\",\n      organizationId: \"#333\",\n      assessment: \"Asynchronous\",\n      assessmentId: \"#87587\",\n      createdDate: \"12 days ago\",\n      externalId: \"C112322\",\n      lastActivity: \"Invited for Assessment\",\n      lastActivityDate: \"5 days ago\"\n    }, {\n      candidateName: \"Wasim Ekram\",\n      candidateEmail: \"lillianben@yahoo.com\",\n      candidateId: \"#782475\",\n      organization: \"HCL Technologies\",\n      organizationId: \"#245\",\n      assessment: \"Javascript Developer\",\n      assessmentId: \"#23554\",\n      createdDate: \"5 days ago\",\n      externalId: \"H28477\",\n      lastActivity: \"Invited for Assessment\",\n      lastActivityDate: \"2 days ago\"\n    }, {\n      candidateName: \"Shresht Juneja\",\n      candidateEmail: \"lillianben@yahoo.com\",\n      candidateId: \"#782475\",\n      organization: \"HCL Technologies\",\n      organizationId: \"#245\",\n      assessment: \"Javascript Developer\",\n      assessmentId: \"#23554\",\n      createdDate: \"5 days ago\",\n      externalId: \"H28477\",\n      lastActivity: \"Invited for Assessment\",\n      lastActivityDate: \"2 days ago\"\n    }, {\n      candidateName: \"Nathan Reed\",\n      candidateEmail: \"nathan.reed@yahoo.com\",\n      candidateId: \"#647634\",\n      organization: \"Cognizant\",\n      organizationId: \"#333\",\n      assessment: \"Asynchronous\",\n      assessmentId: \"#87587\",\n      createdDate: \"12 days ago\",\n      externalId: \"C112322\",\n      lastActivity: \"Invited for Assessment\",\n      lastActivityDate: \"5 days ago\"\n    }, {\n      candidateName: \"Lillian Bennet\",\n      candidateEmail: \"lillianben@yahoo.com\",\n      candidateId: \"#782475\",\n      organization: \"HCL Technologies\",\n      organizationId: \"#245\",\n      assessment: \"Javascript Developer\",\n      assessmentId: \"#23554\",\n      createdDate: \"5 days ago\",\n      externalId: \"H28477\",\n      lastActivity: \"Invited for Assessment\",\n      lastActivityDate: \"2 days ago\"\n    }, {\n      candidateName: \"Nathan Reed\",\n      candidateEmail: \"nathan.reed@yahoo.com\",\n      candidateId: \"#647634\",\n      organization: \"Cognizant\",\n      organizationId: \"#333\",\n      assessment: \"Asynchronous\",\n      assessmentId: \"#87587\",\n      createdDate: \"12 days ago\",\n      externalId: \"C112322\",\n      lastActivity: \"Invited for Assessment\",\n      lastActivityDate: \"5 days ago\"\n    }, {\n      candidateName: \"Lillian Bennet\",\n      candidateEmail: \"lillianben@yahoo.com\",\n      candidateId: \"#782475\",\n      organization: \"HCL Technologies\",\n      organizationId: \"#245\",\n      assessment: \"Javascript Developer\",\n      assessmentId: \"#23554\",\n      createdDate: \"5 days ago\",\n      externalId: \"H28477\",\n      lastActivity: \"Invited for Assessment\",\n      lastActivityDate: \"2 days ago\"\n    }, {\n      candidateName: \"Nathan Reed\",\n      candidateEmail: \"nathan.reed@yahoo.com\",\n      candidateId: \"#647634\",\n      organization: \"Cognizant\",\n      organizationId: \"#333\",\n      assessment: \"Asynchronous\",\n      assessmentId: \"#87587\",\n      createdDate: \"12 days ago\",\n      externalId: \"C112322\",\n      lastActivity: \"Invited for Assessment\",\n      lastActivityDate: \"5 days ago\"\n    }];\n    return React.createElement(Styles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: columns,\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }));\n  }\n}\n\nexport default App;\n/*\nimport React from 'react'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport EnhancedTable from './components/EnhancedTable'\nimport makeData from './makeData'\n\nconst App = () => {\nconst columns = React.useMemo(\n() => [\n/!*{\nHeader: 'First Name',\naccessor: 'firstName',\n},\n{\n    Header: 'Last Name',\n    accessor: 'lastName',\n},\n{\n    Header: 'Age',\n    accessor: 'age',\n},\n{\n    Header: 'Visits',\n    accessor: 'visits',\n},\n{\n    Header: 'Status',\n    accessor: 'status',\n},\n{\n    Header: 'Profile Progress',\n    accessor: 'progress',\n},*!/\n{\n    Header: 'Candidate',\n    accessor: 'candidateName',\n},\n{\n    Header: 'Candidate ID',\n    accessor: 'candidateId',\n},\n{\n    Header: 'Organization',\n    accessor: 'organization',\n},\n{\n    Header: 'Assessment',\n    accessor: 'assessment',\n},\n{\n    Header: 'Created Date',\n    accessor: 'createdDate',\n},\n{\n    Header: 'External ID',\n    accessor: 'externalId',\n},\n{\n    Header: 'Last Activity',\n    accessor: 'lastActivity',\n},\n],\n[]\n)\n\nconst [data, setData] = React.useState(React.useMemo(() => makeData(40), []))\nconst [skipPageReset, setSkipPageReset] = React.useState(false)\n\n// We need to keep the table from resetting the pageIndex when we\n// Update data. So we can keep track of that flag with a ref.\n\n// When our cell renderer calls updateMyData, we'll use\n// the rowIndex, columnId and new value to update the\n// original data\nconst updateMyData = (rowIndex, columnId, value) => {\n// We also turn on the flag to not reset the page\nsetSkipPageReset(true)\nsetData(old =>\nold.map((row, index) => {\nif (index === rowIndex) {\nreturn {\n...old[rowIndex],\n[columnId]: value,\n}\n}\nreturn row\n})\n)\n}\n\nreturn (\n<div>\n    {/!*<CssBaseline / > * !/}\n        <EnhancedTable\n        columns={columns}\n        data={data}\n        setData={setData}\n        updateMyData={updateMyData}\n        skipPageReset={skipPageReset}\n        />\n        </div>\n        )\n    }\n\n    export default App\n\n    */","map":{"version":3,"sources":["/home/user/Downloads/BasicReact/basicreact/src/App.js"],"names":["React","styled","useExpanded","useFilters","useGroupBy","usePagination","useSortBy","useTable","pageSizeOptions","Avatar","ConfigProvider","Styles","div","MyTable","props","instance","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","pageOptions","page","state","pageIndex","pageSize","gotoPage","previousPage","nextPage","setPageSize","canPreviousPage","canNextPage","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","length","e","target","value","Number","mainContentStyle","height","width","color","fontFamily","fontSize","lineHeight","colors","App","Header","accessor","Cell","original","candidateName","candidateEmail","id","ignoreRowClick","candidateId","console","log","organization","assessment","assessmentId","lastActivity","lastActivityDate","organizationId","createdDate","externalId","profileImage"],"mappings":"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","sourcesContent":["/*\nimport React, { Component } from 'react';\nimport './App.css';\nimport HelloWorld from './components/HelloWorld';\n  import Select from './components/Select';\n\nclass App extends Component{\n \n  state = {\n\n    selected_value:\"text\",\n    select_id:\"\",\n    some_value:[\"date\",\"datetime\",\"email\"]\n\n    \n\n  }\n  \n  optionChangeHandler =(e)=>{\n    console.log(\"this is e\", e)\n    this.setState({\n\n      selected_value: e \n      \n\n    }\n  )\n  }\n\n  CallInterval =() =>{\n    console.log(\"intervall call\")\n  }\n\n\n render(){\n   console.log(\"final state\",this.state)\n  return (\n\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {  /!* <img src={logo} className=\"App-logo\" alt=\"logo\" />       *!/}\n         \n          <HelloWorld />\n\n          <Select select_id=\"type_of_input\" selected_value={this.state.selected_value} some_value={this.state.some_value} \n          changed={this.optionChangeHandler}\n\n          />\n           \n      </header>\n    </div>\n  );\n}\n}\nexport default App;\n*/\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport {useExpanded, useFilters, useGroupBy, usePagination, useSortBy, useTable, pageSizeOptions} from 'react-table'\nimport {Avatar, ConfigProvider} from \"react-avatar\";\n\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    \n\n\n    tr {\n    \n      height: 70px;\n  width: 1318px;\n      color: #4A4A4A;\n      font-family: Roboto;\n      font-size: 14px;\n      font-weight: 500;\n      line-height: 19px;\n      :first-child {\n     td{border-top: 2px solid rgba(143,143,143,0.2);}\n      \n      }\n      :last-child {\n      \n        td {\n        color: green;\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      \n      :first-child{ \n      font-weight: bold;      \n      border-left: 2px solid rgba(143,143,143,0.2);\n      };\n      :second-child{color: green};\n      :last-child {\n      border-right: 2px solid rgba(143,143,143,0.2);     \n      }\n    }\n  }\n`\n\nfunction MyTable(props) {\n    // Use the useTable hook to create your table configuration\n    const instance = useTable(\n        props,\n        useGroupBy,\n        useFilters,\n        useSortBy,\n        useExpanded,\n        usePagination,\n    )\n\n    function Table({columns, data}) {\n        // Use the state and functions returned from useTable to build your UI\n        const {\n            getTableProps,\n            getTableBodyProps,\n            headerGroups,\n            rows,\n            prepareRow,\n            pageOptions,\n            page,\n            state: {pageIndex, pageSize},\n            gotoPage,\n            previousPage,\n            nextPage,\n            setPageSize,\n            canPreviousPage,\n            canNextPage,\n            pageSizeOptions\n        } = useTable({\n            columns,\n            data,\n        })\n\n        // Render the UI for your table\n        return (\n            <div>\n                <table {...getTableProps()}>\n                    <thead>\n                    {headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map(column => (\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                            ))}\n                        </tr>\n                    ))}\n                    </thead>\n                    <tbody {...getTableBodyProps()}>\n                    {rows.map((row, i) => {\n                        prepareRow(row)\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {row.cells.map(cell => {\n                                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                })}\n                            </tr>\n                        )\n                    })}\n                    </tbody>\n                </table>\n                <div>\n                    <button onClick={() => previousPage()}\n                            disabled={\n                                !canPreviousPage\n                            }>\n                        Previous\n                        Page\n                    </button>\n                    <button onClick={() => nextPage()} disabled={!canNextPage}>\n                        Next Page\n                    </button>\n                    <div>\n                        Page\n                        {\n                            ' '\n                        }\n                        <em>\n                            {pageIndex + 1} of {pageOptions.length}\n                        </em>\n                    </div>\n                    <div>Go to page:</div>\n                    < input\n                        type=\"number\"\n                        defaultValue={pageIndex + 1 || 1}\n                        onChange={e => {\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0\n                            gotoPage(page)\n                        }\n                        }\n                    />\n                    <select\n                        value={pageSize}\n                        onChange={e => {\n                            setPageSize(Number(e.target.value))\n                        }}\n                    >\n                        {pageSizeOptions.map(pageSize => (\n                            <option key={pageSize} value={pageSize}>\n                                Show {pageSize}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n            </div>\n        )\n    }\n\n    let mainContentStyle = {\n        height: \"16px\",\n        width: \"144px\",\n        color: \"red\",\n        fontFamily: \"Roboto\",\n        fontSize: \"14px\",\n        lineHeight: \"19px\"\n    }\n\n    let colors = ['black', 'green', 'blue']\n\n    function App() {\n        const columns = [\n            {\n                Header: '',\n                accessor: 'profileImage',\n                Cell: ({row}) => {\n                    return (\n                        <div>\n                            <span className=\"class-for-name\" style={{height: \"16px\"}}><ConfigProvider\n                                colors={colors}><Avatar name={row.original.candidateName} size=\"30\"\n                                                        round={true}/></ConfigProvider></span>\n                        </div>\n                    )\n                }\n            },\n            {\n                /*Header: ' ',\n                columns: [\n                    {*/\n                Header: 'Candidate',\n                accessor: 'candidateName',\n                Cell: ({row}) => {\n                    return (\n                        <div>\n                            <span className=\"class-for-name\"\n                                  style={{height: \"16px\"}}>{row.original.candidateName}</span>\n                            <br></br>\n                            <span className=\"class-for-description\"\n                                  style={{color: \"#909090\"}}>{row.original.candidateEmail}</span>\n                        </div>\n                    )\n                }\n            },\n            {\n                Header: 'Candidate ID',\n                id: \"candidateId\",\n                accessor: \"candidateId\",\n                ignoreRowClick: true,\n                Cell: ({row}) => <a href={row.original.candidateId} onClick={() => {\n                }}>{row.original.candidateId}</a>,\n\n            },\n            {\n                Header: 'Organization',\n                accessor: 'organization',\n                Cell: ({row}) => {\n                    return (\n                        <div>\n                            <span onMouseOver={() => {\n                                console.log(\"henlo\")\n                            }} className=\"class-for-name\" style={{height: \"16px\"}}>{row.original.organization}</span>\n                            <br></br>\n                            <span className=\"class-for-description\"\n                                  style={{color: \"#909090\"}}>{row.original.organization}</span>\n                        </div>\n                    )\n                }\n            },\n            {\n                Header: 'Assessment',\n                accessor: 'assessment',\n                Cell: ({row}) => {\n                    return (\n                        <div>\n                            <span className=\"class-for-name\" style={{height: \"16px\"}}>{row.original.assessment}</span>\n                            <br></br>\n                            <span className=\"class-for-description\"\n                                  style={{color: \"#909090\"}}>{row.original.assessmentId}</span>\n                        </div>\n                    )\n                }\n            },\n            {\n                Header: 'Created Date',\n                accessor: 'createdDate',\n            },\n            {\n                Header: 'External ID',\n                accessor: 'externalId',\n            },\n            {\n                Header: 'Last Activity',\n                accessor: 'lastActivity',\n                Cell: ({row}) => {\n                    return (\n                        <div>\n                            <span className=\"class-for-name\" style={{height: \"16px\"}}>{row.original.lastActivity}</span>\n                            <br></br>\n                            <span className=\"class-for-description\"\n                                  style={{color: \"#909090\"}}>{row.original.lastActivityDate}</span>\n                        </div>\n                    )\n                }\n            },\n        ]\n\n        /*const data = React.useMemo(() => makeData(20), [])*/\n        const data = [{\n            candidateName: \"Lillian Bennet\",\n            candidateEmail: \"lillianben@yahoo.com\",\n            candidateId: \"#782475\",\n            organization: \"HCL Technologies\",\n            organizationId: \"#245\",\n            assessment: \"Javascript Developer\",\n            assessmentId: \"#23554\",\n            createdDate: \"5 days ago\",\n            externalId: \"H28477\",\n            lastActivity: \"Invited for Assessment\",\n            lastActivityDate: \"2 days ago\",\n            profileImage: \"hello\"\n\n        },\n            {\n                candidateName: \"Nathan Reed\",\n                candidateEmail: \"nathan.reed@yahoo.com\",\n                candidateId: \"#647634\",\n                organization: \"Cognizant\",\n                organizationId: \"#333\",\n                assessment: \"Asynchronous\",\n                assessmentId: \"#87587\",\n                createdDate: \"12 days ago\",\n                externalId: \"C112322\",\n                lastActivity: \"Invited for Assessment\",\n                lastActivityDate: \"5 days ago\"\n\n            },\n            {\n                candidateName: \"Wasim Ekram\",\n                candidateEmail: \"lillianben@yahoo.com\",\n                candidateId: \"#782475\",\n                organization: \"HCL Technologies\",\n                organizationId: \"#245\",\n                assessment: \"Javascript Developer\",\n                assessmentId: \"#23554\",\n                createdDate: \"5 days ago\",\n                externalId: \"H28477\",\n                lastActivity: \"Invited for Assessment\",\n                lastActivityDate: \"2 days ago\"\n\n            },\n            {\n                candidateName: \"Shresht Juneja\",\n                candidateEmail: \"lillianben@yahoo.com\",\n                candidateId: \"#782475\",\n                organization: \"HCL Technologies\",\n                organizationId: \"#245\",\n                assessment: \"Javascript Developer\",\n                assessmentId: \"#23554\",\n                createdDate: \"5 days ago\",\n                externalId: \"H28477\",\n                lastActivity: \"Invited for Assessment\",\n                lastActivityDate: \"2 days ago\"\n\n            },\n            {\n                candidateName: \"Nathan Reed\",\n                candidateEmail: \"nathan.reed@yahoo.com\",\n                candidateId: \"#647634\",\n                organization: \"Cognizant\",\n                organizationId: \"#333\",\n                assessment: \"Asynchronous\",\n                assessmentId: \"#87587\",\n                createdDate: \"12 days ago\",\n                externalId: \"C112322\",\n                lastActivity: \"Invited for Assessment\",\n                lastActivityDate: \"5 days ago\"\n\n            }, {\n                candidateName: \"Lillian Bennet\",\n                candidateEmail: \"lillianben@yahoo.com\",\n                candidateId: \"#782475\",\n                organization: \"HCL Technologies\",\n                organizationId: \"#245\",\n                assessment: \"Javascript Developer\",\n                assessmentId: \"#23554\",\n                createdDate: \"5 days ago\",\n                externalId: \"H28477\",\n                lastActivity: \"Invited for Assessment\",\n                lastActivityDate: \"2 days ago\"\n\n            },\n            {\n                candidateName: \"Nathan Reed\",\n                candidateEmail: \"nathan.reed@yahoo.com\",\n                candidateId: \"#647634\",\n                organization: \"Cognizant\",\n                organizationId: \"#333\",\n                assessment: \"Asynchronous\",\n                assessmentId: \"#87587\",\n                createdDate: \"12 days ago\",\n                externalId: \"C112322\",\n                lastActivity: \"Invited for Assessment\",\n                lastActivityDate: \"5 days ago\"\n\n            }, {\n                candidateName: \"Lillian Bennet\",\n                candidateEmail: \"lillianben@yahoo.com\",\n                candidateId: \"#782475\",\n                organization: \"HCL Technologies\",\n                organizationId: \"#245\",\n                assessment: \"Javascript Developer\",\n                assessmentId: \"#23554\",\n                createdDate: \"5 days ago\",\n                externalId: \"H28477\",\n                lastActivity: \"Invited for Assessment\",\n                lastActivityDate: \"2 days ago\"\n\n            },\n            {\n                candidateName: \"Nathan Reed\",\n                candidateEmail: \"nathan.reed@yahoo.com\",\n                candidateId: \"#647634\",\n                organization: \"Cognizant\",\n                organizationId: \"#333\",\n                assessment: \"Asynchronous\",\n                assessmentId: \"#87587\",\n                createdDate: \"12 days ago\",\n                externalId: \"C112322\",\n                lastActivity: \"Invited for Assessment\",\n                lastActivityDate: \"5 days ago\"\n\n            }]\n\n        return (\n            <Styles>\n                <Table columns={columns} data={data}/>\n            </Styles>\n        )\n    }\n\n}\n\nexport default App\n\n/*\nimport React from 'react'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport EnhancedTable from './components/EnhancedTable'\nimport makeData from './makeData'\n\nconst App = () => {\nconst columns = React.useMemo(\n() => [\n/!*{\nHeader: 'First Name',\naccessor: 'firstName',\n},\n{\n    Header: 'Last Name',\n    accessor: 'lastName',\n},\n{\n    Header: 'Age',\n    accessor: 'age',\n},\n{\n    Header: 'Visits',\n    accessor: 'visits',\n},\n{\n    Header: 'Status',\n    accessor: 'status',\n},\n{\n    Header: 'Profile Progress',\n    accessor: 'progress',\n},*!/\n{\n    Header: 'Candidate',\n    accessor: 'candidateName',\n},\n{\n    Header: 'Candidate ID',\n    accessor: 'candidateId',\n},\n{\n    Header: 'Organization',\n    accessor: 'organization',\n},\n{\n    Header: 'Assessment',\n    accessor: 'assessment',\n},\n{\n    Header: 'Created Date',\n    accessor: 'createdDate',\n},\n{\n    Header: 'External ID',\n    accessor: 'externalId',\n},\n{\n    Header: 'Last Activity',\n    accessor: 'lastActivity',\n},\n],\n[]\n)\n\nconst [data, setData] = React.useState(React.useMemo(() => makeData(40), []))\nconst [skipPageReset, setSkipPageReset] = React.useState(false)\n\n// We need to keep the table from resetting the pageIndex when we\n// Update data. So we can keep track of that flag with a ref.\n\n// When our cell renderer calls updateMyData, we'll use\n// the rowIndex, columnId and new value to update the\n// original data\nconst updateMyData = (rowIndex, columnId, value) => {\n// We also turn on the flag to not reset the page\nsetSkipPageReset(true)\nsetData(old =>\nold.map((row, index) => {\nif (index === rowIndex) {\nreturn {\n...old[rowIndex],\n[columnId]: value,\n}\n}\nreturn row\n})\n)\n}\n\nreturn (\n<div>\n    {/!*<CssBaseline / > * !/}\n        <EnhancedTable\n        columns={columns}\n        data={data}\n        setData={setData}\n        updateMyData={updateMyData}\n        skipPageReset={skipPageReset}\n        />\n        </div>\n        )\n    }\n\n    export default App\n\n    */\n"]},"metadata":{},"sourceType":"module"}