{"ast":null,"code":"var _jsxFileName = \"/home/user/Downloads/BasicReact/basicreact/src/App.js\";\n\n/*\nimport React, { Component } from 'react';\nimport './App.css';\nimport HelloWorld from './components/HelloWorld';\n  import Select from './components/Select';\n\nclass App extends Component{\n \n  state = {\n\n    selected_value:\"text\",\n    select_id:\"\",\n    some_value:[\"date\",\"datetime\",\"email\"]\n\n    \n\n  }\n  \n  optionChangeHandler =(e)=>{\n    console.log(\"this is e\", e)\n    this.setState({\n\n      selected_value: e \n      \n\n    }\n  )\n  }\n\n  CallInterval =() =>{\n    console.log(\"intervall call\")\n  }\n\n\n render(){\n   console.log(\"final state\",this.state)\n  return (\n\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {  /!* <img src={logo} className=\"App-logo\" alt=\"logo\" />       *!/}\n         \n          <HelloWorld />\n\n          <Select select_id=\"type_of_input\" selected_value={this.state.selected_value} some_value={this.state.some_value} \n          changed={this.optionChangeHandler}\n\n          />\n           \n      </header>\n    </div>\n  );\n}\n}\nexport default App;\n*/\n\n/*\nimport React from 'react'\nimport styled from 'styled-components'\nimport {useTable} from 'react-table'\n\nimport makeData from './makeData'\n\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`\n\nfunction Table({columns, data}) {\n    // Use the state and functions returned from useTable to build your UI\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = useTable({\n        columns,\n        data,\n    })\n\n    // Render the UI for your table\n    return (\n        <table {...getTableProps()}>\n            <thead>\n            {headerGroups.map(headerGroup => (\n                <tr {...headerGroup.getHeaderGroupProps()}>\n                    {headerGroup.headers.map(column => (\n                        <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                    ))}\n                </tr>\n            ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n            {rows.map((row, i) => {\n                prepareRow(row)\n                return (\n                    <tr {...row.getRowProps()}>\n                        {row.cells.map(cell => {\n                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                        })}\n                    </tr>\n                )\n            })}\n            </tbody>\n        </table>\n    )\n}\n\nfunction App() {\n    const columns = React.useMemo(\n        () => [\n            {\n                Header: ' ',\n                columns: [\n                    {\n                        Header: 'Candidate',\n                        accessor: 'candidateName',\n                    },\n                    {\n                        Header: 'Candidate ID',\n                        accessor: 'candidateId',\n                    },\n                    {\n                        Header: 'Organization',\n                        accessor: 'organization',\n                    },\n                    {\n                        Header: 'Assessment',\n                        accessor: 'assessment',\n                    },\n                    {\n                        Header: 'Created Date',\n                        accessor: 'createdDate',\n                    },\n                    {\n                        Header: 'External ID',\n                        accessor: 'externalId',\n                    },\n                    {\n                        Header: 'Last Activity',\n                        accessor: 'lastActivity',\n                    },\n                ],\n            },\n            /!*{\n                Header: 'Info',\n                columns: [\n                    {\n                        Header: 'Age',\n                        accessor: 'age',\n                    },\n                    {\n                        Header: 'Visits',\n                        accessor: 'visits',\n                    },\n                    {\n                        Header: 'Status',\n                        accessor: 'status',\n                    },\n                    {\n                        Header: 'Profile Progress',\n                        accessor: 'progress',\n                    },\n                ],\n            },*!/\n        ],\n        []\n    )\n\n    const data = React.useMemo(() => makeData(20), [])\n\n    return (\n        <Styles>\n            <Table columns={columns} data={data}/>\n        </Styles>\n    )\n}\n\nexport default App\n*/\nimport React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport EnhancedTable from './components/EnhancedTable';\nimport makeData from './makeData';\n\nconst App = () => {\n  const columns = React.useMemo(() => [\n  /*{\n      Header: 'First Name',\n      accessor: 'firstName',\n  },\n  {\n      Header: 'Last Name',\n      accessor: 'lastName',\n  },\n  {\n      Header: 'Age',\n      accessor: 'age',\n  },\n  {\n      Header: 'Visits',\n      accessor: 'visits',\n  },\n  {\n      Header: 'Status',\n      accessor: 'status',\n  },\n  {\n      Header: 'Profile Progress',\n      accessor: 'progress',\n  },*/\n  {\n    Header: 'Candidate',\n    accessor: 'candidateName'\n  }, {\n    Header: 'Candidate ID',\n    accessor: 'candidateId'\n  }, {\n    Header: 'Organization',\n    accessor: 'organization'\n  }, {\n    Header: 'Assessment',\n    accessor: 'assessment'\n  }, {\n    Header: 'Created Date',\n    accessor: 'createdDate'\n  }, {\n    Header: 'External ID',\n    accessor: 'externalId'\n  }, {\n    Header: 'Last Activity',\n    accessor: 'lastActivity'\n  }], []);\n  const [data, setData] = React.useState(React.useMemo(() => makeData(20), []));\n  const [skipPageReset, setSkipPageReset] = React.useState(false); // We need to keep the table from resetting the pageIndex when we\n  // Update data. So we can keep track of that flag with a ref.\n  // When our cell renderer calls updateMyData, we'll use\n  // the rowIndex, columnId and new value to update the\n  // original data\n\n  const updateMyData = (rowIndex, columnId, value) => {\n    // We also turn on the flag to not reset the page\n    setSkipPageReset(true);\n    setData(old => old.map((row, index) => {\n      if (index === rowIndex) {\n        return { ...old[rowIndex],\n          [columnId]: value\n        };\n      }\n\n      return row;\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }), React.createElement(EnhancedTable, {\n    columns: columns,\n    data: data,\n    setData: setData,\n    updateMyData: updateMyData,\n    skipPageReset: skipPageReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/user/Downloads/BasicReact/basicreact/src/App.js"],"names":["React","CssBaseline","EnhancedTable","makeData","App","columns","useMemo","Header","accessor","data","setData","useState","skipPageReset","setSkipPageReset","updateMyData","rowIndex","columnId","value","old","map","row","index"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqJA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AACd,QAAMC,OAAO,GAAGL,KAAK,CAACM,OAAN,CACZ,MAAM;AACF;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACIC,IAAAA,MAAM,EAAE,WADZ;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GAzBE,EA6BF;AACID,IAAAA,MAAM,EAAE,cADZ;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GA7BE,EAiCF;AACID,IAAAA,MAAM,EAAE,cADZ;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GAjCE,EAqCF;AACID,IAAAA,MAAM,EAAE,YADZ;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GArCE,EAyCF;AACID,IAAAA,MAAM,EAAE,cADZ;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GAzCE,EA6CF;AACID,IAAAA,MAAM,EAAE,aADZ;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GA7CE,EAiDF;AACID,IAAAA,MAAM,EAAE,eADZ;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GAjDE,CADM,EAuDZ,EAvDY,CAAhB;AA0DA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,KAAK,CAACW,QAAN,CAAeX,KAAK,CAACM,OAAN,CAAc,MAAMH,QAAQ,CAAC,EAAD,CAA5B,EAAkC,EAAlC,CAAf,CAAxB;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCb,KAAK,CAACW,QAAN,CAAe,KAAf,CAA1C,CA5Dc,CA8Dd;AACA;AAEA;AACA;AACA;;AACA,QAAMG,YAAY,GAAG,CAACC,QAAD,EAAWC,QAAX,EAAqBC,KAArB,KAA+B;AAChD;AACAJ,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAH,IAAAA,OAAO,CAACQ,GAAG,IACPA,GAAG,CAACC,GAAJ,CAAQ,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACpB,UAAIA,KAAK,KAAKN,QAAd,EAAwB;AACpB,eAAO,EACH,GAAGG,GAAG,CAACH,QAAD,CADH;AAEH,WAACC,QAAD,GAAYC;AAFT,SAAP;AAIH;;AACD,aAAOG,GAAP;AACH,KARD,CADG,CAAP;AAWH,GAdD;;AAgBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,aAAD;AACI,IAAA,OAAO,EAAEf,OADb;AAEI,IAAA,IAAI,EAAEI,IAFV;AAGI,IAAA,OAAO,EAAEC,OAHb;AAII,IAAA,YAAY,EAAEI,YAJlB;AAKI,IAAA,aAAa,EAAEF,aALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAYH,CAhGD;;AAkGA,eAAeR,GAAf","sourcesContent":["/*\nimport React, { Component } from 'react';\nimport './App.css';\nimport HelloWorld from './components/HelloWorld';\n  import Select from './components/Select';\n\nclass App extends Component{\n \n  state = {\n\n    selected_value:\"text\",\n    select_id:\"\",\n    some_value:[\"date\",\"datetime\",\"email\"]\n\n    \n\n  }\n  \n  optionChangeHandler =(e)=>{\n    console.log(\"this is e\", e)\n    this.setState({\n\n      selected_value: e \n      \n\n    }\n  )\n  }\n\n  CallInterval =() =>{\n    console.log(\"intervall call\")\n  }\n\n\n render(){\n   console.log(\"final state\",this.state)\n  return (\n\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {  /!* <img src={logo} className=\"App-logo\" alt=\"logo\" />       *!/}\n         \n          <HelloWorld />\n\n          <Select select_id=\"type_of_input\" selected_value={this.state.selected_value} some_value={this.state.some_value} \n          changed={this.optionChangeHandler}\n\n          />\n           \n      </header>\n    </div>\n  );\n}\n}\nexport default App;\n*/\n\n/*\nimport React from 'react'\nimport styled from 'styled-components'\nimport {useTable} from 'react-table'\n\nimport makeData from './makeData'\n\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`\n\nfunction Table({columns, data}) {\n    // Use the state and functions returned from useTable to build your UI\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = useTable({\n        columns,\n        data,\n    })\n\n    // Render the UI for your table\n    return (\n        <table {...getTableProps()}>\n            <thead>\n            {headerGroups.map(headerGroup => (\n                <tr {...headerGroup.getHeaderGroupProps()}>\n                    {headerGroup.headers.map(column => (\n                        <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                    ))}\n                </tr>\n            ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n            {rows.map((row, i) => {\n                prepareRow(row)\n                return (\n                    <tr {...row.getRowProps()}>\n                        {row.cells.map(cell => {\n                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                        })}\n                    </tr>\n                )\n            })}\n            </tbody>\n        </table>\n    )\n}\n\nfunction App() {\n    const columns = React.useMemo(\n        () => [\n            {\n                Header: ' ',\n                columns: [\n                    {\n                        Header: 'Candidate',\n                        accessor: 'candidateName',\n                    },\n                    {\n                        Header: 'Candidate ID',\n                        accessor: 'candidateId',\n                    },\n                    {\n                        Header: 'Organization',\n                        accessor: 'organization',\n                    },\n                    {\n                        Header: 'Assessment',\n                        accessor: 'assessment',\n                    },\n                    {\n                        Header: 'Created Date',\n                        accessor: 'createdDate',\n                    },\n                    {\n                        Header: 'External ID',\n                        accessor: 'externalId',\n                    },\n                    {\n                        Header: 'Last Activity',\n                        accessor: 'lastActivity',\n                    },\n                ],\n            },\n            /!*{\n                Header: 'Info',\n                columns: [\n                    {\n                        Header: 'Age',\n                        accessor: 'age',\n                    },\n                    {\n                        Header: 'Visits',\n                        accessor: 'visits',\n                    },\n                    {\n                        Header: 'Status',\n                        accessor: 'status',\n                    },\n                    {\n                        Header: 'Profile Progress',\n                        accessor: 'progress',\n                    },\n                ],\n            },*!/\n        ],\n        []\n    )\n\n    const data = React.useMemo(() => makeData(20), [])\n\n    return (\n        <Styles>\n            <Table columns={columns} data={data}/>\n        </Styles>\n    )\n}\n\nexport default App\n*/\nimport React from 'react'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport EnhancedTable from './components/EnhancedTable'\nimport makeData from './makeData'\n\nconst App = () => {\n    const columns = React.useMemo(\n        () => [\n            /*{\n                Header: 'First Name',\n                accessor: 'firstName',\n            },\n            {\n                Header: 'Last Name',\n                accessor: 'lastName',\n            },\n            {\n                Header: 'Age',\n                accessor: 'age',\n            },\n            {\n                Header: 'Visits',\n                accessor: 'visits',\n            },\n            {\n                Header: 'Status',\n                accessor: 'status',\n            },\n            {\n                Header: 'Profile Progress',\n                accessor: 'progress',\n            },*/\n            {\n                Header: 'Candidate',\n                accessor: 'candidateName',\n            },\n            {\n                Header: 'Candidate ID',\n                accessor: 'candidateId',\n            },\n            {\n                Header: 'Organization',\n                accessor: 'organization',\n            },\n            {\n                Header: 'Assessment',\n                accessor: 'assessment',\n            },\n            {\n                Header: 'Created Date',\n                accessor: 'createdDate',\n            },\n            {\n                Header: 'External ID',\n                accessor: 'externalId',\n            },\n            {\n                Header: 'Last Activity',\n                accessor: 'lastActivity',\n            },\n        ],\n        []\n    )\n\n    const [data, setData] = React.useState(React.useMemo(() => makeData(20), []))\n    const [skipPageReset, setSkipPageReset] = React.useState(false)\n\n    // We need to keep the table from resetting the pageIndex when we\n    // Update data. So we can keep track of that flag with a ref.\n\n    // When our cell renderer calls updateMyData, we'll use\n    // the rowIndex, columnId and new value to update the\n    // original data\n    const updateMyData = (rowIndex, columnId, value) => {\n        // We also turn on the flag to not reset the page\n        setSkipPageReset(true)\n        setData(old =>\n            old.map((row, index) => {\n                if (index === rowIndex) {\n                    return {\n                        ...old[rowIndex],\n                        [columnId]: value,\n                    }\n                }\n                return row\n            })\n        )\n    }\n\n    return (\n        <div>\n            <CssBaseline />\n            <EnhancedTable\n                columns={columns}\n                data={data}\n                setData={setData}\n                updateMyData={updateMyData}\n                skipPageReset={skipPageReset}\n            />\n        </div>\n    )\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}